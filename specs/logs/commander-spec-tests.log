2019-03-01T15:35:03.244 | DEBUG | c.e.spec.SpockTestSupport | Commander server url: https://localhost:8443
2019-03-01T15:37:54.069 | DEBUG | c.e.spec.SpockTestSupport | Commander server url: https://ps9.ecloud-kdemo.com:8443
2019-03-01T15:37:56.369 | DEBUG | c.e.spec.SpockTestSupport | login using admin
2019-03-01T15:37:58.022 | DEBUG | c.e.spec.SpockTestSupport | Commander server url: https://ps9.ecloud-kdemo.com:8443
2019-03-01T15:37:59.068 | DEBUG | c.e.spec.SpockTestSupport | login using admin
2019-03-01T15:42:47.853 | DEBUG | c.e.spec.SpockTestSupport | Commander server url: https://localhost:8443
2019-03-01T15:43:27.609 | DEBUG | c.e.spec.SpockTestSupport | Commander server url: https://ps9.ecloud-kdemo.com:8443
2019-03-01T15:43:29.854 | DEBUG | c.e.spec.SpockTestSupport | login using admin
2019-03-01T15:43:31.542 | DEBUG | c.e.spec.SpockTestSupport | Commander server url: https://ps9.ecloud-kdemo.com:8443
2019-03-01T15:43:32.582 | DEBUG | c.e.spec.SpockTestSupport | login using admin
2019-03-01T15:44:19.953 | DEBUG | c.e.spec.SpockTestSupport | Commander server url: https://ps9.ecloud-kdemo.com:8443
2019-03-01T15:44:22.171 | DEBUG | c.e.spec.SpockTestSupport | login using admin
2019-03-01T15:44:23.772 | DEBUG | c.e.spec.SpockTestSupport | Commander server url: https://ps9.ecloud-kdemo.com:8443
2019-03-01T15:44:24.807 | DEBUG | c.e.spec.SpockTestSupport | login using admin
2019-03-01T15:48:45.333 | DEBUG | c.e.spec.SpockTestSupport | Commander server url: https://localhost:8443
2019-03-01T15:54:17.755 | DEBUG | c.e.spec.SpockTestSupport | Commander server url: https://ps9.ecloud-kdemo.com:8443
2019-03-01T15:54:20.065 | DEBUG | c.e.spec.SpockTestSupport | login using admin
2019-03-01T15:54:21.189 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: deleteProject(projectName: 'EC-Admin_Test')
2019-03-01T15:54:22.743 | DEBUG | c.e.spec.SpockTestSupport | Response {
    
}
2019-03-01T15:54:23.730 | DEBUG | c.e.spec.SpockTestSupport | Commander server url: https://ps9.ecloud-kdemo.com:8443
2019-03-01T15:54:24.776 | DEBUG | c.e.spec.SpockTestSupport | login using admin
2019-03-01T15:57:13.311 | DEBUG | c.e.spec.SpockTestSupport | Commander server url: https://ps9.ecloud-kdemo.com:8443
2019-03-01T15:57:15.714 | DEBUG | c.e.spec.SpockTestSupport | login using admin
2019-03-01T15:57:16.598 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: deleteProject(projectName: 'EC-Admin_Test')
2019-03-01T15:57:17.260 | DEBUG | c.e.spec.SpockTestSupport | Response {
    
}
2019-03-01T15:57:18.269 | DEBUG | c.e.spec.SpockTestSupport | Commander server url: https://ps9.ecloud-kdemo.com:8443
2019-03-01T15:57:19.395 | DEBUG | c.e.spec.SpockTestSupport | login using admin
2019-03-01T15:59:33.947 | DEBUG | c.e.spec.SpockTestSupport | Commander server url: https://ps9.ecloud-kdemo.com:8443
2019-03-01T15:59:36.204 | DEBUG | c.e.spec.SpockTestSupport | login using admin
2019-03-01T15:59:37.177 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: deleteProject(projectName: 'EC-Admin_Test')
2019-03-01T15:59:38.155 | DEBUG | c.e.spec.SpockTestSupport | Response {
    
}
2019-03-01T15:59:39.351 | DEBUG | c.e.spec.SpockTestSupport | Commander server url: https://ps9.ecloud-kdemo.com:8443
2019-03-01T15:59:40.398 | DEBUG | c.e.spec.SpockTestSupport | login using admin
2019-03-01T16:04:00.573 | DEBUG | c.e.spec.SpockTestSupport | Commander server url: https://ps9.ecloud-kdemo.com:8443
2019-03-01T16:04:03.169 | DEBUG | c.e.spec.SpockTestSupport | login using admin
2019-03-01T16:04:04.078 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: 
project 'EC-Admin_Test', {
  description = 'procedure testing'
  resourceName = ''
  workspaceName = ''

  procedure 'artifactRepoSyncTesting', {
    description = 'Do not delete. Called by ntest'
    jobNameTemplate = ''
    resourceName = ''
    timeLimit = ''
    timeLimitUnits = 'minutes'
    workspaceName = ''

    formalParameter 'repoRes', defaultValue: 'win8', {
      description = 'The resource of the repo to test'
      expansionDeferred = '0'
      label = null
      orderIndex = null
      required = '1'
      type = 'entry'
    }

    step 'delete', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = '''$[/plugins[EC-Admin]project/scripts/perlHeaderJSON]

use File::Path;

my $dir=$ENV{\'COMMANDER_DATA\'};

if (! $dir) {
  printf("Error: COMMANDER_DATA undefined: $dir\\n");
  exit(1);
}
printf("Delete $dir/repository-data");
rmtree ("$dir/repository-data");
'''
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = ''
      parallel = '0'
      postProcessor = ''
      precondition = ''
      releaseMode = 'none'
      resourceName = '$[repoRes]'
      shell = 'ec-perl'
      subprocedure = null
      subproject = null
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = ''
      workspaceName = ''
    }

    step 'sync', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = null
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = null
      parallel = '0'
      postProcessor = null
      precondition = ''
      releaseMode = 'none'
      resourceName = ''
      shell = null
      subprocedure = 'artifactRepositorySynchronization'
      subproject = '/plugins/EC-Admin/project'
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = null
      workspaceName = ''
      actualParameter 'artifactRepositoryList', 'default'
      actualParameter 'artifactRepositoryResource', '$[repoRes]'
      actualParameter 'artifactVersionPattern', 'AA:*'
      actualParameter 'batchSize', '25'
    }

    step 'verify', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = '''$[/plugins[EC-Admin]project/scripts/perlHeaderJSON]

use File::Path;

my $dir=$ENV{\'COMMANDER_DATA\'};

if (! $dir) {
  printf("Error: COMMANDER_DATA undefined: $dir\\n");
  exit(1);
}
if (! -d "$dir/repository-data/AA/OLHp/3.3.3") {
	printf("Error: cannot find AA/OLHp/3.3.3 in $dir/repository-data");
    exit(1);
}

if (! -d "$dir/repository-data/AA/OLHp/3.3.4") {
	printf("Error: cannot find AA/OLHp/3.3.4 in $dir/repository-data");
    exit(1);
}
'''
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = ''
      parallel = '0'
      postProcessor = ''
      precondition = ''
      releaseMode = 'none'
      resourceName = '$[repoRes]'
      shell = 'ec-perl'
      subprocedure = null
      subproject = null
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = ''
      workspaceName = ''
    }

    // Custom properties

    property 'ec_customEditorData', {

      // Custom properties

      property 'parameters', {

        // Custom properties

        property 'repoRes', {

          // Custom properties
          formType = 'standard'
        }
      }
    }
  }

  procedure 'cleanJob-LocalWorkspace', {
    description = ''
    jobNameTemplate = ''
    resourceName = ''
    timeLimit = ''
    timeLimitUnits = 'minutes'
    workspaceName = ''

    step 'echo', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = '''echo "Hellow world"
'''
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = ''
      parallel = '0'
      postProcessor = ''
      precondition = ''
      releaseMode = 'none'
      resourceName = 'ecadmin-win'
      shell = ''
      subprocedure = null
      subproject = null
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = ''
      workspaceName = 'ecadmin-win-wks'
    }

    step 'build', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = null
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = null
      parallel = '0'
      postProcessor = null
      precondition = ''
      releaseMode = 'none'
      resourceName = ''
      shell = null
      subprocedure = 'Build'
      subproject = 'Training_user'
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = null
      workspaceName = ''
      actualParameter 'Build Label', 'gfoo'
    }
  }

  procedure 'getPS', {
    description = '''to be called by ntest to verify getP and getPS work as expected
Issue #20'''
    jobNameTemplate = ''
    resourceName = ''
    timeLimit = ''
    timeLimitUnits = 'minutes'
    workspaceName = ''

    step 'getPSJSON', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = '''$[/projects/EC-Admin/scripts/perlHeaderJSON]

my $hRef=getPS("/server/EC-Admin", 1);
print Dumper($hRef);

my $val=$hRef->{licenseLogger}->{config}->{emailTo};
$ec->setProperty("summary", $val);
exit ($val ne "$[/server/EC-Admin/licenseLogger/config/emailTo]");

$[/projects/EC-Admin/scripts/perlLibJSON]
'''
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = ''
      parallel = '0'
      postProcessor = ''
      precondition = ''
      releaseMode = 'none'
      resourceName = ''
      shell = 'ec-perl'
      subprocedure = null
      subproject = null
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = ''
      workspaceName = ''
    }

    step 'getPSXML', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = '''$[/projects/EC-Admin/scripts/perlHeader]
use Data::Dumper;

my $hRef=getPS("/myProject/PS", 1);
print Dumper($hRef);

my $val=$hRef->{licenseLogger}->{config}->{emailTo};
$ec->setProperty("summary", $val);
exit ($val ne "$[/myProject/PS/licenseLogger/config/emailTo]");

$[/projects/EC-Admin/scripts/perlLib]
'''
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = ''
      parallel = '0'
      postProcessor = ''
      precondition = ''
      releaseMode = 'none'
      resourceName = ''
      shell = 'ec-perl'
      subprocedure = null
      subproject = null
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = ''
      workspaceName = ''
    }
  }

  procedure 'questionMark', {
    description = ''
    jobNameTemplate = ''
    resourceName = ''
    timeLimit = ''
    timeLimitUnits = 'minutes'
    workspaceName = ''

    step 'rerun?', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = 'echo "I\'m rerunning"'
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = ''
      parallel = '0'
      postProcessor = ''
      precondition = ''
      releaseMode = 'none'
      resourceName = ''
      shell = ''
      subprocedure = null
      subproject = null
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = ''
      workspaceName = ''
    }
  }

  procedure 'RP_Test2', {
    jobNameTemplate = null
    resourceName = null
    timeLimitUnits = null
    workspaceName = null

    step 'step2_1', {
      alwaysRun = '0'
      broadcast = '0'
      command = null
      condition = null
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = null
      parallel = '0'
      postProcessor = null
      precondition = null
      releaseMode = 'none'
      resourceName = null
      shell = null
      subprocedure = 'RP_Proc1'
      subproject = null
      timeLimitUnits = null
      workingDirectory = null
      workspaceName = null
    }
  }

  procedure 'scriptsPropertiesTest', {
    description = '''Test the code in the scripts PS to be sure they can be loaded from a different project
Called by NTEST '''
    jobNameTemplate = ''
    resourceName = ''
    timeLimit = ''
    timeLimitUnits = 'minutes'
    workspaceName = ''

    step 'humanSize', {
      description = 'Should return 3 Mb'
      alwaysRun = '0'
      broadcast = '0'
      command = '''$[/plugins/[EC-Admin]/project/scripts/perlHeaderJSON]
my $res=humanSize(3*1024*1024);

printf("size=%s\\n",$res);
$ec->setProperty("result", $res);

$[/plugins/[EC-Admin]/project/scripts/perlCommonLib]'''
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = ''
      parallel = '0'
      postProcessor = ''
      precondition = ''
      releaseMode = 'none'
      resourceName = 'ecadmin-lin'
      shell = 'ec-perl'
      subprocedure = null
      subproject = null
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = ''
      workspaceName = ''
    }
  }

  procedure 'semaphoreTest', {
    description = ''
    jobNameTemplate = '$[/server/jobTemplate]'
    resourceName = ''
    timeLimit = ''
    timeLimitUnits = 'minutes'
    workspaceName = ''

    formalParameter 'token', defaultValue: '1', {
      description = ''
      expansionDeferred = '0'
      label = null
      orderIndex = null
      required = '1'
      simpleList = '1|2|3'
      type = 'radio'
    }

    step 'acqToken', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = null
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = null
      parallel = '0'
      postProcessor = null
      precondition = ''
      releaseMode = 'none'
      resourceName = ''
      shell = null
      subprocedure = 'acquireSemaphore'
      subproject = 'EC-Admin'
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = null
      workspaceName = ''
      actualParameter 'maxSemaphoreValue', '1'
      actualParameter 'semaphoreProperty', '/projects/EC-Admin Test/token$[token]'
      actualParameter 'serializationResource', 'Serializer'
    }

    step 'sleep', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = 'sleep 10'
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = ''
      parallel = '0'
      postProcessor = ''
      precondition = ''
      releaseMode = 'none'
      resourceName = ''
      shell = ''
      subprocedure = null
      subproject = null
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = ''
      workspaceName = ''
    }

    step 'relToken', {
      description = ''
      alwaysRun = '1'
      broadcast = '0'
      command = null
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = null
      parallel = '0'
      postProcessor = null
      precondition = ''
      releaseMode = 'none'
      resourceName = ''
      shell = null
      subprocedure = 'releaseSemaphore'
      subproject = 'EC-Admin'
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = null
      workspaceName = ''
      actualParameter 'semaphoreProperty', '/projects/EC-Admin Test/token$[token]'
      actualParameter 'serializationResource', 'Serializer'
    }

    // Custom properties

    property 'ec_customEditorData', {

      // Custom properties

      property 'parameters', {

        // Custom properties

        property 'token', {

          // Custom properties

          property 'options', {

            // Custom properties
            list = '1|2|3'

            property 'type', value: 'simpleList', {
              expandable = '1'
              suppressValueTracking = '0'
            }
          }
          formType = 'standard'
        }
      }
    }
  }

  procedure 'TestRemoveParameter', {
    description = ''
    jobNameTemplate = ''
    resourceName = ''
    timeLimit = ''
    timeLimitUnits = 'minutes'
    workspaceName = ''

    step 'CreateProcedure', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = '''$[/projects/EC-Admin/scripts/perlHeaderJSON]

my $proj="$[/myProject/projectName]";

#
# Create callee
#
my($ok,$json)=InvokeCOmmander(\'getProcedure\', "RP_Proc1);
if (! $ok) {
  $ec->createProcedure($proj, "RP_Proc1");
  $ec->createFormalParameter($proj, "RP_Proc1", "param1", {description=>"Test param1"});
}

#
# Create Caller
#
$ec->createProcedure($proj, "RP_Test2");
$ec->createStep($proj, "RP_Test2", "step2_1",
			{
              actualParameter=>[{actualParameterName => \'param1\', value => \'main\'}],
              subprocedure=>"RP_Proc1"
            }
         );

$[/projects/EC-Admin/scripts/perlLibJSON]
'''
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = ''
      parallel = '0'
      postProcessor = ''
      precondition = ''
      releaseMode = 'none'
      resourceName = ''
      shell = 'ec-perl'
      subprocedure = null
      subproject = null
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = ''
      workspaceName = ''
    }

    step 'callTest', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = null
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = null
      parallel = '0'
      postProcessor = null
      precondition = ''
      releaseMode = 'none'
      resourceName = ''
      shell = null
      subprocedure = 'removeParameterFromCall'
      subproject = 'EC-Admin'
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = null
      workspaceName = ''
      actualParameter 'debug', 'true'
      actualParameter 'delete', 'true'
      actualParameter 'parameter_Name', 'param1'
      actualParameter 'procedure_Name', 'RP_Proc1'
      actualParameter 'project_Name', 'EC-Admin Test'
    }

    step 'Clean', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = '''$[/projects/EC-Admin/scripts/perlHeaderJSON]

my $proj="$[/myProject/projectName]";

$ec->deleteProcedure($proj, "RP_Proc1");
$ec->deleteProcedure($proj, "RP_Proc2");
'''
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = ''
      parallel = '0'
      postProcessor = ''
      precondition = ''
      releaseMode = 'none'
      resourceName = ''
      shell = 'ec-perl'
      subprocedure = null
      subproject = null
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = ''
      workspaceName = ''
    }
  }

  tag 'ec-admin'

  // Custom properties

  property 'PS', {
    description = ''

    // Custom properties

    property 'cleanup', {

      // Custom properties

      property 'config', {

        // Custom properties

        property 'timeout', value: '600', {
          description = ''
          expandable = '1'
          suppressValueTracking = '0'
        }
      }
    }

    property 'licenseLogger', {

      // Custom properties

      property 'config', {

        // Custom properties
        cleanpOldJobs = '1'

        property 'emailConfig', value: 'default', {
          expandable = '1'
          suppressValueTracking = '0'
        }
        emailTo = 'admin'

        property 'resource', value: 'local', {
          expandable = '1'
          suppressValueTracking = '0'
        }

        property 'workspace', value: 'default', {
          expandable = '1'
          suppressValueTracking = '0'
        }
      }
    }
  }
  ec_tags = ' ec-admin '
  token1 = '1'
  token2 = '-1'
  token3 = ''
}

2019-03-01T16:04:09.259 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "project": {
        "projectId": "41b04390-3c33-11e9-8951-0a03fa837144",
        "projectName": "EC-Admin_Test",
        "createTime": "2019-03-01T15:04:05.027Z",
        "description": "procedure testing",
        "lastModifiedBy": "admin",
        "modifyTime": "2019-03-01T15:04:05.027Z",
        "owner": "admin",
        "processCount": "0",
        "propertySheetId": "41b06aa2-3c33-11e9-8951-0a03fa837144",
        "stageCount": "0",
        "tracked": "1"
    }
}
2019-03-01T16:04:09.312 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: promotePlugin(pluginName: "EC-Admin")
2019-03-01T16:04:09.951 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "plugin": {
        "pluginId": "6a43c592-b2f8-11e8-addf-0a03fa837144",
        "pluginName": "EC-Admin-3.1.6.709",
        "author": "L. Rochette",
        "createTime": "2018-09-07T23:47:43.667Z",
        "description": "A set of administrative tasks to help manage your server.",
        "label": "EC-Admin",
        "lastModifiedBy": "admin",
        "modifyTime": "2018-09-07T23:51:26.644Z",
        "owner": "admin",
        "pluginKey": "EC-Admin",
        "pluginVersion": "3.1.6.709",
        "pluginWizardBased": "1",
        "projectName": "EC-Admin-3.1.6.709",
        "promoted": "1",
        "propertySheetId": "6a43c594-b2f8-11e8-addf-0a03fa837144",
        "supportsConfigurations": "0"
    }
}
2019-03-01T16:04:09.952 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getProperty("/plugins/EC-Admin/pluginVersion")
2019-03-01T16:04:10.585 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyName": "pluginVersion",
        "createTime": "2018-09-07T23:47:43.667Z",
        "description": "'pluginVersion' is a built-in property on plugin 'EC-Admin-3.1.6.709'",
        "expandable": "1",
        "modifyTime": "2018-09-07T23:51:26.644Z",
        "pathRelativeToOwner": "pluginVersion",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "3.1.6.709"
    }
}
2019-03-01T16:04:10.586 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getProperty("/plugins/EC-Admin/project/ec_visibility")
2019-03-01T16:04:11.234 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyId": "6b385edc-b2f8-11e8-9035-0a03fa837144",
        "propertyName": "ec_visibility",
        "createTime": "2018-09-07T23:47:44.670Z",
        "expandable": "1",
        "lastModifiedBy": "admin",
        "modifyTime": "2018-09-07T23:47:44.670Z",
        "owner": "admin",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "pickListOnly"
    }
}
2019-03-01T16:04:11.261 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: 
      setProperty(
        propertyName: "/plugins/EC-Admin/project/ec_debug_logToProperty",
        value: "/myJob/debug_logs"
      )
    
2019-03-01T16:04:11.884 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyId": "82ed8a3b-3c26-11e9-989d-0a03fa837144",
        "propertyName": "ec_debug_logToProperty",
        "createTime": "2019-03-01T13:32:51.428Z",
        "expandable": "1",
        "lastModifiedBy": "admin",
        "modifyTime": "2019-03-01T13:32:51.428Z",
        "owner": "admin",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "/myJob/debug_logs"
    }
}
2019-03-01T16:04:11.886 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: runProcedure(projectName: "EC-Admin_Test", procedureName: "scriptsPropertiesTest") 
2019-03-01T16:04:12.526 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "jobId": "45d3608c-3c33-11e9-8e37-0a03fa837144"
}
2019-03-01T16:04:12.532 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: waitForCompletion jobId:'45d3608c-3c33-11e9-8e37-0a03fa837144'
2019-03-01T16:04:13.666 | DEBUG | c.e.spec.SpockTestSupport | Response {
    
}
2019-03-01T16:04:13.668 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getProperty(propertyName: '/myJob/debug_logs', jobId: '45d3608c-3c33-11e9-8e37-0a03fa837144')
2019-03-01T16:04:14.288 | DEBUG | c.e.spec.SpockTestSupport | Response {
    
}
2019-03-01T16:04:14.293 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getJobStatus jobId: '45d3608c-3c33-11e9-8e37-0a03fa837144'
2019-03-01T16:04:14.963 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "jobId": "45d3608c-3c33-11e9-8e37-0a03fa837144",
    "outcome": "error",
    "status": "completed"
}
2019-03-01T16:04:14.964 | DEBUG | c.e.spec.SpockTestSupport | DSL: runProcedure(projectName: "EC-Admin_Test", procedureName: "scriptsPropertiesTest") 
2019-03-01T16:04:14.964 | DEBUG | c.e.spec.SpockTestSupport | Logs: Possible exception in logs; check job
2019-03-01T16:04:14.964 | DEBUG | c.e.spec.SpockTestSupport | Outcome: error
2019-03-01T16:04:14.977 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: deleteProject(projectName: 'EC-Admin_Test')
2019-03-01T16:04:17.208 | DEBUG | c.e.spec.SpockTestSupport | Response {
    
}
2019-03-01T16:04:18.101 | DEBUG | c.e.spec.SpockTestSupport | Commander server url: https://ps9.ecloud-kdemo.com:8443
2019-03-01T16:04:19.161 | DEBUG | c.e.spec.SpockTestSupport | login using admin
2019-03-01T16:06:43.501 | DEBUG | c.e.spec.SpockTestSupport | Commander server url: https://ps9.ecloud-kdemo.com:8443
2019-03-01T16:06:46.116 | DEBUG | c.e.spec.SpockTestSupport | login using admin
2019-03-01T16:06:47.092 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: 
project 'EC-Admin_Test', {
  description = 'procedure testing'
  resourceName = ''
  workspaceName = ''

  procedure 'artifactRepoSyncTesting', {
    description = 'Do not delete. Called by ntest'
    jobNameTemplate = ''
    resourceName = ''
    timeLimit = ''
    timeLimitUnits = 'minutes'
    workspaceName = ''

    formalParameter 'repoRes', defaultValue: 'win8', {
      description = 'The resource of the repo to test'
      expansionDeferred = '0'
      label = null
      orderIndex = null
      required = '1'
      type = 'entry'
    }

    step 'delete', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = '''$[/plugins[EC-Admin]project/scripts/perlHeaderJSON]

use File::Path;

my $dir=$ENV{\'COMMANDER_DATA\'};

if (! $dir) {
  printf("Error: COMMANDER_DATA undefined: $dir\\n");
  exit(1);
}
printf("Delete $dir/repository-data");
rmtree ("$dir/repository-data");
'''
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = ''
      parallel = '0'
      postProcessor = ''
      precondition = ''
      releaseMode = 'none'
      resourceName = '$[repoRes]'
      shell = 'ec-perl'
      subprocedure = null
      subproject = null
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = ''
      workspaceName = ''
    }

    step 'sync', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = null
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = null
      parallel = '0'
      postProcessor = null
      precondition = ''
      releaseMode = 'none'
      resourceName = ''
      shell = null
      subprocedure = 'artifactRepositorySynchronization'
      subproject = '/plugins/EC-Admin/project'
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = null
      workspaceName = ''
      actualParameter 'artifactRepositoryList', 'default'
      actualParameter 'artifactRepositoryResource', '$[repoRes]'
      actualParameter 'artifactVersionPattern', 'AA:*'
      actualParameter 'batchSize', '25'
    }

    step 'verify', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = '''$[/plugins[EC-Admin]project/scripts/perlHeaderJSON]

use File::Path;

my $dir=$ENV{\'COMMANDER_DATA\'};

if (! $dir) {
  printf("Error: COMMANDER_DATA undefined: $dir\\n");
  exit(1);
}
if (! -d "$dir/repository-data/AA/OLHp/3.3.3") {
	printf("Error: cannot find AA/OLHp/3.3.3 in $dir/repository-data");
    exit(1);
}

if (! -d "$dir/repository-data/AA/OLHp/3.3.4") {
	printf("Error: cannot find AA/OLHp/3.3.4 in $dir/repository-data");
    exit(1);
}
'''
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = ''
      parallel = '0'
      postProcessor = ''
      precondition = ''
      releaseMode = 'none'
      resourceName = '$[repoRes]'
      shell = 'ec-perl'
      subprocedure = null
      subproject = null
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = ''
      workspaceName = ''
    }

    // Custom properties

    property 'ec_customEditorData', {

      // Custom properties

      property 'parameters', {

        // Custom properties

        property 'repoRes', {

          // Custom properties
          formType = 'standard'
        }
      }
    }
  }

  procedure 'cleanJob-LocalWorkspace', {
    description = ''
    jobNameTemplate = ''
    resourceName = ''
    timeLimit = ''
    timeLimitUnits = 'minutes'
    workspaceName = ''

    step 'echo', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = '''echo "Hellow world"
'''
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = ''
      parallel = '0'
      postProcessor = ''
      precondition = ''
      releaseMode = 'none'
      resourceName = 'ecadmin-win'
      shell = ''
      subprocedure = null
      subproject = null
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = ''
      workspaceName = 'ecadmin-win-wks'
    }

    step 'build', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = null
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = null
      parallel = '0'
      postProcessor = null
      precondition = ''
      releaseMode = 'none'
      resourceName = ''
      shell = null
      subprocedure = 'Build'
      subproject = 'Training_user'
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = null
      workspaceName = ''
      actualParameter 'Build Label', 'gfoo'
    }
  }

  procedure 'getPS', {
    description = '''to be called by ntest to verify getP and getPS work as expected
Issue #20'''
    jobNameTemplate = ''
    resourceName = ''
    timeLimit = ''
    timeLimitUnits = 'minutes'
    workspaceName = ''

    step 'getPSJSON', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = '''$[/projects/EC-Admin/scripts/perlHeaderJSON]

my $hRef=getPS("/server/EC-Admin", 1);
print Dumper($hRef);

my $val=$hRef->{licenseLogger}->{config}->{emailTo};
$ec->setProperty("summary", $val);
exit ($val ne "$[/server/EC-Admin/licenseLogger/config/emailTo]");

$[/projects/EC-Admin/scripts/perlLibJSON]
'''
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = ''
      parallel = '0'
      postProcessor = ''
      precondition = ''
      releaseMode = 'none'
      resourceName = ''
      shell = 'ec-perl'
      subprocedure = null
      subproject = null
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = ''
      workspaceName = ''
    }

    step 'getPSXML', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = '''$[/projects/EC-Admin/scripts/perlHeader]
use Data::Dumper;

my $hRef=getPS("/myProject/PS", 1);
print Dumper($hRef);

my $val=$hRef->{licenseLogger}->{config}->{emailTo};
$ec->setProperty("summary", $val);
exit ($val ne "$[/myProject/PS/licenseLogger/config/emailTo]");

$[/projects/EC-Admin/scripts/perlLib]
'''
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = ''
      parallel = '0'
      postProcessor = ''
      precondition = ''
      releaseMode = 'none'
      resourceName = ''
      shell = 'ec-perl'
      subprocedure = null
      subproject = null
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = ''
      workspaceName = ''
    }
  }

  procedure 'questionMark', {
    description = ''
    jobNameTemplate = ''
    resourceName = ''
    timeLimit = ''
    timeLimitUnits = 'minutes'
    workspaceName = ''

    step 'rerun?', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = 'echo "I\'m rerunning"'
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = ''
      parallel = '0'
      postProcessor = ''
      precondition = ''
      releaseMode = 'none'
      resourceName = ''
      shell = ''
      subprocedure = null
      subproject = null
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = ''
      workspaceName = ''
    }
  }

  procedure 'RP_Test2', {
    jobNameTemplate = null
    resourceName = null
    timeLimitUnits = null
    workspaceName = null

    step 'step2_1', {
      alwaysRun = '0'
      broadcast = '0'
      command = null
      condition = null
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = null
      parallel = '0'
      postProcessor = null
      precondition = null
      releaseMode = 'none'
      resourceName = null
      shell = null
      subprocedure = 'RP_Proc1'
      subproject = null
      timeLimitUnits = null
      workingDirectory = null
      workspaceName = null
    }
  }

  procedure 'scriptsPropertiesTest', {
    description = '''Test the code in the scripts PS to be sure they can be loaded from a different project
Called by NTEST '''
    jobNameTemplate = ''
    resourceName = ''
    timeLimit = ''
    timeLimitUnits = 'minutes'
    workspaceName = ''

    step 'humanSize', {
      description = 'Should return 3 Mb'
      alwaysRun = '0'
      broadcast = '0'
      command = '''$[/plugins/[EC-Admin]/project/scripts/perlHeaderJSON]
my $res=humanSize(3*1024*1024);

printf("size=%s\\n",$res);
$ec->setProperty("result", $res);

$[/plugins/[EC-Admin]/project/scripts/perlCommonLib]'''
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = ''
      parallel = '0'
      postProcessor = ''
      precondition = ''
      releaseMode = 'none'
      resourceName = 'ecadmin-lin'
      shell = 'ec-perl'
      subprocedure = null
      subproject = null
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = ''
      workspaceName = ''
    }
  }

  procedure 'semaphoreTest', {
    description = ''
    jobNameTemplate = '$[/server/jobTemplate]'
    resourceName = ''
    timeLimit = ''
    timeLimitUnits = 'minutes'
    workspaceName = ''

    formalParameter 'token', defaultValue: '1', {
      description = ''
      expansionDeferred = '0'
      label = null
      orderIndex = null
      required = '1'
      simpleList = '1|2|3'
      type = 'radio'
    }

    step 'acqToken', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = null
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = null
      parallel = '0'
      postProcessor = null
      precondition = ''
      releaseMode = 'none'
      resourceName = ''
      shell = null
      subprocedure = 'acquireSemaphore'
      subproject = 'EC-Admin'
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = null
      workspaceName = ''
      actualParameter 'maxSemaphoreValue', '1'
      actualParameter 'semaphoreProperty', '/projects/EC-Admin Test/token$[token]'
      actualParameter 'serializationResource', 'Serializer'
    }

    step 'sleep', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = 'sleep 10'
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = ''
      parallel = '0'
      postProcessor = ''
      precondition = ''
      releaseMode = 'none'
      resourceName = ''
      shell = ''
      subprocedure = null
      subproject = null
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = ''
      workspaceName = ''
    }

    step 'relToken', {
      description = ''
      alwaysRun = '1'
      broadcast = '0'
      command = null
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = null
      parallel = '0'
      postProcessor = null
      precondition = ''
      releaseMode = 'none'
      resourceName = ''
      shell = null
      subprocedure = 'releaseSemaphore'
      subproject = 'EC-Admin'
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = null
      workspaceName = ''
      actualParameter 'semaphoreProperty', '/projects/EC-Admin Test/token$[token]'
      actualParameter 'serializationResource', 'Serializer'
    }

    // Custom properties

    property 'ec_customEditorData', {

      // Custom properties

      property 'parameters', {

        // Custom properties

        property 'token', {

          // Custom properties

          property 'options', {

            // Custom properties
            list = '1|2|3'

            property 'type', value: 'simpleList', {
              expandable = '1'
              suppressValueTracking = '0'
            }
          }
          formType = 'standard'
        }
      }
    }
  }

  procedure 'TestRemoveParameter', {
    description = ''
    jobNameTemplate = ''
    resourceName = ''
    timeLimit = ''
    timeLimitUnits = 'minutes'
    workspaceName = ''

    step 'CreateProcedure', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = '''$[/projects/EC-Admin/scripts/perlHeaderJSON]

my $proj="$[/myProject/projectName]";

#
# Create callee
#
my($ok,$json)=InvokeCOmmander(\'getProcedure\', "RP_Proc1);
if (! $ok) {
  $ec->createProcedure($proj, "RP_Proc1");
  $ec->createFormalParameter($proj, "RP_Proc1", "param1", {description=>"Test param1"});
}

#
# Create Caller
#
$ec->createProcedure($proj, "RP_Test2");
$ec->createStep($proj, "RP_Test2", "step2_1",
			{
              actualParameter=>[{actualParameterName => \'param1\', value => \'main\'}],
              subprocedure=>"RP_Proc1"
            }
         );

$[/projects/EC-Admin/scripts/perlLibJSON]
'''
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = ''
      parallel = '0'
      postProcessor = ''
      precondition = ''
      releaseMode = 'none'
      resourceName = ''
      shell = 'ec-perl'
      subprocedure = null
      subproject = null
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = ''
      workspaceName = ''
    }

    step 'callTest', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = null
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = null
      parallel = '0'
      postProcessor = null
      precondition = ''
      releaseMode = 'none'
      resourceName = ''
      shell = null
      subprocedure = 'removeParameterFromCall'
      subproject = 'EC-Admin'
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = null
      workspaceName = ''
      actualParameter 'debug', 'true'
      actualParameter 'delete', 'true'
      actualParameter 'parameter_Name', 'param1'
      actualParameter 'procedure_Name', 'RP_Proc1'
      actualParameter 'project_Name', 'EC-Admin Test'
    }

    step 'Clean', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = '''$[/projects/EC-Admin/scripts/perlHeaderJSON]

my $proj="$[/myProject/projectName]";

$ec->deleteProcedure($proj, "RP_Proc1");
$ec->deleteProcedure($proj, "RP_Proc2");
'''
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = ''
      parallel = '0'
      postProcessor = ''
      precondition = ''
      releaseMode = 'none'
      resourceName = ''
      shell = 'ec-perl'
      subprocedure = null
      subproject = null
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = ''
      workspaceName = ''
    }
  }

  tag 'ec-admin'

  // Custom properties

  property 'PS', {
    description = ''

    // Custom properties

    property 'cleanup', {

      // Custom properties

      property 'config', {

        // Custom properties

        property 'timeout', value: '600', {
          description = ''
          expandable = '1'
          suppressValueTracking = '0'
        }
      }
    }

    property 'licenseLogger', {

      // Custom properties

      property 'config', {

        // Custom properties
        cleanpOldJobs = '1'

        property 'emailConfig', value: 'default', {
          expandable = '1'
          suppressValueTracking = '0'
        }
        emailTo = 'admin'

        property 'resource', value: 'local', {
          expandable = '1'
          suppressValueTracking = '0'
        }

        property 'workspace', value: 'default', {
          expandable = '1'
          suppressValueTracking = '0'
        }
      }
    }
  }
  ec_tags = ' ec-admin '
  token1 = '1'
  token2 = '-1'
  token3 = ''
}

2019-03-01T16:06:52.998 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "project": {
        "projectId": "a2d9eb9e-3c33-11e9-b2a8-0a03fa837144",
        "projectName": "EC-Admin_Test",
        "createTime": "2019-03-01T15:06:48.055Z",
        "description": "procedure testing",
        "lastModifiedBy": "admin",
        "modifyTime": "2019-03-01T15:06:48.055Z",
        "owner": "admin",
        "processCount": "0",
        "propertySheetId": "a2d9eba0-3c33-11e9-b2a8-0a03fa837144",
        "stageCount": "0",
        "tracked": "1"
    }
}
2019-03-01T16:06:53.046 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: promotePlugin(pluginName: "EC-Admin")
2019-03-01T16:06:53.683 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "plugin": {
        "pluginId": "6a43c592-b2f8-11e8-addf-0a03fa837144",
        "pluginName": "EC-Admin-3.1.6.709",
        "author": "L. Rochette",
        "createTime": "2018-09-07T23:47:43.667Z",
        "description": "A set of administrative tasks to help manage your server.",
        "label": "EC-Admin",
        "lastModifiedBy": "admin",
        "modifyTime": "2018-09-07T23:51:26.644Z",
        "owner": "admin",
        "pluginKey": "EC-Admin",
        "pluginVersion": "3.1.6.709",
        "pluginWizardBased": "1",
        "projectName": "EC-Admin-3.1.6.709",
        "promoted": "1",
        "propertySheetId": "6a43c594-b2f8-11e8-addf-0a03fa837144",
        "supportsConfigurations": "0"
    }
}
2019-03-01T16:06:53.684 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getProperty("/plugins/EC-Admin/pluginVersion")
2019-03-01T16:06:54.319 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyName": "pluginVersion",
        "createTime": "2018-09-07T23:47:43.667Z",
        "description": "'pluginVersion' is a built-in property on plugin 'EC-Admin-3.1.6.709'",
        "expandable": "1",
        "modifyTime": "2018-09-07T23:51:26.644Z",
        "pathRelativeToOwner": "pluginVersion",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "3.1.6.709"
    }
}
2019-03-01T16:06:54.321 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getProperty("/plugins/EC-Admin/project/ec_visibility")
2019-03-01T16:06:54.944 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyId": "6b385edc-b2f8-11e8-9035-0a03fa837144",
        "propertyName": "ec_visibility",
        "createTime": "2018-09-07T23:47:44.670Z",
        "expandable": "1",
        "lastModifiedBy": "admin",
        "modifyTime": "2018-09-07T23:47:44.670Z",
        "owner": "admin",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "pickListOnly"
    }
}
2019-03-01T16:06:54.978 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: 
      setProperty(
        propertyName: "/plugins/EC-Admin/project/ec_debug_logToProperty",
        value: "/myJob/debug_logs"
      )
    
2019-03-01T16:06:55.608 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyId": "82ed8a3b-3c26-11e9-989d-0a03fa837144",
        "propertyName": "ec_debug_logToProperty",
        "createTime": "2019-03-01T13:32:51.428Z",
        "expandable": "1",
        "lastModifiedBy": "admin",
        "modifyTime": "2019-03-01T13:32:51.428Z",
        "owner": "admin",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "/myJob/debug_logs"
    }
}
2019-03-01T16:06:55.610 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: runProcedure(projectName: "EC-Admin_Test", procedureName: "scriptsPropertiesTest") 
2019-03-01T16:06:57.775 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "jobId": "a76b5a61-3c33-11e9-b2a8-0a03fa837144"
}
2019-03-01T16:06:57.782 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: waitForCompletion jobId:'a76b5a61-3c33-11e9-b2a8-0a03fa837144'
2019-03-01T16:06:58.901 | DEBUG | c.e.spec.SpockTestSupport | Response {
    
}
2019-03-01T16:06:58.904 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getProperty(propertyName: '/myJob/debug_logs', jobId: 'a76b5a61-3c33-11e9-b2a8-0a03fa837144')
2019-03-01T16:06:59.526 | DEBUG | c.e.spec.SpockTestSupport | Response {
    
}
2019-03-01T16:06:59.532 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getJobStatus jobId: 'a76b5a61-3c33-11e9-b2a8-0a03fa837144'
2019-03-01T16:07:00.147 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "jobId": "a76b5a61-3c33-11e9-b2a8-0a03fa837144",
    "outcome": "error",
    "status": "completed"
}
2019-03-01T16:07:00.148 | DEBUG | c.e.spec.SpockTestSupport | DSL: runProcedure(projectName: "EC-Admin_Test", procedureName: "scriptsPropertiesTest") 
2019-03-01T16:07:00.149 | DEBUG | c.e.spec.SpockTestSupport | Logs: Possible exception in logs; check job
2019-03-01T16:07:00.149 | DEBUG | c.e.spec.SpockTestSupport | Outcome: error
2019-03-01T16:07:01.151 | DEBUG | c.e.spec.SpockTestSupport | Commander server url: https://ps9.ecloud-kdemo.com:8443
2019-03-01T16:07:02.196 | DEBUG | c.e.spec.SpockTestSupport | login using admin
2019-03-01T16:11:10.763 | DEBUG | c.e.spec.SpockTestSupport | Commander server url: https://ps9.ecloud-kdemo.com:8443
2019-03-01T16:11:13.174 | DEBUG | c.e.spec.SpockTestSupport | login using admin
2019-03-01T16:11:14.063 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: resource 'ecadmin-lin', hostname: 'localhost' 
2019-03-01T16:11:14.820 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "resource": {
        "resourceId": "417a4a18-3c34-11e9-8951-0a03fa837144",
        "resourceName": "ecadmin-lin",
        "agentState": {
            "alive": "0",
            "details": "This agent has not been pinged yet",
            "message": "This agent has not been pinged yet",
            "state": "unknown",
            "time": "2018-10-12T20:18:08.508Z"
        },
        "createTime": "2019-03-01T15:11:14.572Z",
        "createTimeFormatted": "2019-03-01 15:11:14 UTC",
        "hostType": "CONCURRENT",
        "lastModifiedBy": "admin",
        "lastRunTimeFormatted": "",
        "modifyTime": "2019-03-01T15:11:14.572Z",
        "owner": "admin",
        "port": "",
        "propertySheetId": "417a4a1a-3c34-11e9-8951-0a03fa837144",
        "proxyPort": "",
        "resourceAgentState": "unknown",
        "resourceDisabled": "0",
        "runningTime": "0h 0min",
        "stepLimit": "",
        "trusted": "0",
        "useSSL": "1",
        "zoneName": "default"
    }
}
2019-03-01T16:11:14.849 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: 
project 'EC-Admin_Test', {
  description = 'procedure testing'
  resourceName = ''
  workspaceName = ''

  procedure 'artifactRepoSyncTesting', {
    description = 'Do not delete. Called by ntest'
    jobNameTemplate = ''
    resourceName = ''
    timeLimit = ''
    timeLimitUnits = 'minutes'
    workspaceName = ''

    formalParameter 'repoRes', defaultValue: 'win8', {
      description = 'The resource of the repo to test'
      expansionDeferred = '0'
      label = null
      orderIndex = null
      required = '1'
      type = 'entry'
    }

    step 'delete', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = '''$[/plugins[EC-Admin]project/scripts/perlHeaderJSON]

use File::Path;

my $dir=$ENV{\'COMMANDER_DATA\'};

if (! $dir) {
  printf("Error: COMMANDER_DATA undefined: $dir\\n");
  exit(1);
}
printf("Delete $dir/repository-data");
rmtree ("$dir/repository-data");
'''
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = ''
      parallel = '0'
      postProcessor = ''
      precondition = ''
      releaseMode = 'none'
      resourceName = '$[repoRes]'
      shell = 'ec-perl'
      subprocedure = null
      subproject = null
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = ''
      workspaceName = ''
    }

    step 'sync', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = null
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = null
      parallel = '0'
      postProcessor = null
      precondition = ''
      releaseMode = 'none'
      resourceName = ''
      shell = null
      subprocedure = 'artifactRepositorySynchronization'
      subproject = '/plugins/EC-Admin/project'
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = null
      workspaceName = ''
      actualParameter 'artifactRepositoryList', 'default'
      actualParameter 'artifactRepositoryResource', '$[repoRes]'
      actualParameter 'artifactVersionPattern', 'AA:*'
      actualParameter 'batchSize', '25'
    }

    step 'verify', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = '''$[/plugins[EC-Admin]project/scripts/perlHeaderJSON]

use File::Path;

my $dir=$ENV{\'COMMANDER_DATA\'};

if (! $dir) {
  printf("Error: COMMANDER_DATA undefined: $dir\\n");
  exit(1);
}
if (! -d "$dir/repository-data/AA/OLHp/3.3.3") {
	printf("Error: cannot find AA/OLHp/3.3.3 in $dir/repository-data");
    exit(1);
}

if (! -d "$dir/repository-data/AA/OLHp/3.3.4") {
	printf("Error: cannot find AA/OLHp/3.3.4 in $dir/repository-data");
    exit(1);
}
'''
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = ''
      parallel = '0'
      postProcessor = ''
      precondition = ''
      releaseMode = 'none'
      resourceName = '$[repoRes]'
      shell = 'ec-perl'
      subprocedure = null
      subproject = null
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = ''
      workspaceName = ''
    }

    // Custom properties

    property 'ec_customEditorData', {

      // Custom properties

      property 'parameters', {

        // Custom properties

        property 'repoRes', {

          // Custom properties
          formType = 'standard'
        }
      }
    }
  }

  procedure 'cleanJob-LocalWorkspace', {
    description = ''
    jobNameTemplate = ''
    resourceName = ''
    timeLimit = ''
    timeLimitUnits = 'minutes'
    workspaceName = ''

    step 'echo', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = '''echo "Hellow world"
'''
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = ''
      parallel = '0'
      postProcessor = ''
      precondition = ''
      releaseMode = 'none'
      resourceName = 'ecadmin-win'
      shell = ''
      subprocedure = null
      subproject = null
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = ''
      workspaceName = 'ecadmin-win-wks'
    }

    step 'build', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = null
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = null
      parallel = '0'
      postProcessor = null
      precondition = ''
      releaseMode = 'none'
      resourceName = ''
      shell = null
      subprocedure = 'Build'
      subproject = 'Training_user'
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = null
      workspaceName = ''
      actualParameter 'Build Label', 'gfoo'
    }
  }

  procedure 'getPS', {
    description = '''to be called by ntest to verify getP and getPS work as expected
Issue #20'''
    jobNameTemplate = ''
    resourceName = ''
    timeLimit = ''
    timeLimitUnits = 'minutes'
    workspaceName = ''

    step 'getPSJSON', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = '''$[/projects/EC-Admin/scripts/perlHeaderJSON]

my $hRef=getPS("/server/EC-Admin", 1);
print Dumper($hRef);

my $val=$hRef->{licenseLogger}->{config}->{emailTo};
$ec->setProperty("summary", $val);
exit ($val ne "$[/server/EC-Admin/licenseLogger/config/emailTo]");

$[/projects/EC-Admin/scripts/perlLibJSON]
'''
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = ''
      parallel = '0'
      postProcessor = ''
      precondition = ''
      releaseMode = 'none'
      resourceName = ''
      shell = 'ec-perl'
      subprocedure = null
      subproject = null
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = ''
      workspaceName = ''
    }

    step 'getPSXML', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = '''$[/projects/EC-Admin/scripts/perlHeader]
use Data::Dumper;

my $hRef=getPS("/myProject/PS", 1);
print Dumper($hRef);

my $val=$hRef->{licenseLogger}->{config}->{emailTo};
$ec->setProperty("summary", $val);
exit ($val ne "$[/myProject/PS/licenseLogger/config/emailTo]");

$[/projects/EC-Admin/scripts/perlLib]
'''
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = ''
      parallel = '0'
      postProcessor = ''
      precondition = ''
      releaseMode = 'none'
      resourceName = ''
      shell = 'ec-perl'
      subprocedure = null
      subproject = null
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = ''
      workspaceName = ''
    }
  }

  procedure 'questionMark', {
    description = ''
    jobNameTemplate = ''
    resourceName = ''
    timeLimit = ''
    timeLimitUnits = 'minutes'
    workspaceName = ''

    step 'rerun?', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = 'echo "I\'m rerunning"'
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = ''
      parallel = '0'
      postProcessor = ''
      precondition = ''
      releaseMode = 'none'
      resourceName = ''
      shell = ''
      subprocedure = null
      subproject = null
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = ''
      workspaceName = ''
    }
  }

  procedure 'RP_Test2', {
    jobNameTemplate = null
    resourceName = null
    timeLimitUnits = null
    workspaceName = null

    step 'step2_1', {
      alwaysRun = '0'
      broadcast = '0'
      command = null
      condition = null
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = null
      parallel = '0'
      postProcessor = null
      precondition = null
      releaseMode = 'none'
      resourceName = null
      shell = null
      subprocedure = 'RP_Proc1'
      subproject = null
      timeLimitUnits = null
      workingDirectory = null
      workspaceName = null
    }
  }

  procedure 'scriptsPropertiesTest', {
    description = '''Test the code in the scripts PS to be sure they can be loaded from a different project
Called by NTEST '''
    jobNameTemplate = ''
    resourceName = ''
    timeLimit = ''
    timeLimitUnits = 'minutes'
    workspaceName = ''

    step 'humanSize', {
      description = 'Should return 3 Mb'
      alwaysRun = '0'
      broadcast = '0'
      command = '''$[/plugins/[EC-Admin]/project/scripts/perlHeaderJSON]
my $res=humanSize(3*1024*1024);

printf("size=%s\\n",$res);
$ec->setProperty("result", $res);

$[/plugins/[EC-Admin]/project/scripts/perlCommonLib]'''
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = ''
      parallel = '0'
      postProcessor = ''
      precondition = ''
      releaseMode = 'none'
      resourceName = 'ecadmin-lin'
      shell = 'ec-perl'
      subprocedure = null
      subproject = null
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = ''
      workspaceName = ''
    }
  }

  procedure 'semaphoreTest', {
    description = ''
    jobNameTemplate = '$[/server/jobTemplate]'
    resourceName = ''
    timeLimit = ''
    timeLimitUnits = 'minutes'
    workspaceName = ''

    formalParameter 'token', defaultValue: '1', {
      description = ''
      expansionDeferred = '0'
      label = null
      orderIndex = null
      required = '1'
      simpleList = '1|2|3'
      type = 'radio'
    }

    step 'acqToken', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = null
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = null
      parallel = '0'
      postProcessor = null
      precondition = ''
      releaseMode = 'none'
      resourceName = ''
      shell = null
      subprocedure = 'acquireSemaphore'
      subproject = 'EC-Admin'
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = null
      workspaceName = ''
      actualParameter 'maxSemaphoreValue', '1'
      actualParameter 'semaphoreProperty', '/projects/EC-Admin Test/token$[token]'
      actualParameter 'serializationResource', 'Serializer'
    }

    step 'sleep', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = 'sleep 10'
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = ''
      parallel = '0'
      postProcessor = ''
      precondition = ''
      releaseMode = 'none'
      resourceName = ''
      shell = ''
      subprocedure = null
      subproject = null
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = ''
      workspaceName = ''
    }

    step 'relToken', {
      description = ''
      alwaysRun = '1'
      broadcast = '0'
      command = null
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = null
      parallel = '0'
      postProcessor = null
      precondition = ''
      releaseMode = 'none'
      resourceName = ''
      shell = null
      subprocedure = 'releaseSemaphore'
      subproject = 'EC-Admin'
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = null
      workspaceName = ''
      actualParameter 'semaphoreProperty', '/projects/EC-Admin Test/token$[token]'
      actualParameter 'serializationResource', 'Serializer'
    }

    // Custom properties

    property 'ec_customEditorData', {

      // Custom properties

      property 'parameters', {

        // Custom properties

        property 'token', {

          // Custom properties

          property 'options', {

            // Custom properties
            list = '1|2|3'

            property 'type', value: 'simpleList', {
              expandable = '1'
              suppressValueTracking = '0'
            }
          }
          formType = 'standard'
        }
      }
    }
  }

  procedure 'TestRemoveParameter', {
    description = ''
    jobNameTemplate = ''
    resourceName = ''
    timeLimit = ''
    timeLimitUnits = 'minutes'
    workspaceName = ''

    step 'CreateProcedure', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = '''$[/projects/EC-Admin/scripts/perlHeaderJSON]

my $proj="$[/myProject/projectName]";

#
# Create callee
#
my($ok,$json)=InvokeCOmmander(\'getProcedure\', "RP_Proc1);
if (! $ok) {
  $ec->createProcedure($proj, "RP_Proc1");
  $ec->createFormalParameter($proj, "RP_Proc1", "param1", {description=>"Test param1"});
}

#
# Create Caller
#
$ec->createProcedure($proj, "RP_Test2");
$ec->createStep($proj, "RP_Test2", "step2_1",
			{
              actualParameter=>[{actualParameterName => \'param1\', value => \'main\'}],
              subprocedure=>"RP_Proc1"
            }
         );

$[/projects/EC-Admin/scripts/perlLibJSON]
'''
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = ''
      parallel = '0'
      postProcessor = ''
      precondition = ''
      releaseMode = 'none'
      resourceName = ''
      shell = 'ec-perl'
      subprocedure = null
      subproject = null
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = ''
      workspaceName = ''
    }

    step 'callTest', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = null
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = null
      parallel = '0'
      postProcessor = null
      precondition = ''
      releaseMode = 'none'
      resourceName = ''
      shell = null
      subprocedure = 'removeParameterFromCall'
      subproject = 'EC-Admin'
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = null
      workspaceName = ''
      actualParameter 'debug', 'true'
      actualParameter 'delete', 'true'
      actualParameter 'parameter_Name', 'param1'
      actualParameter 'procedure_Name', 'RP_Proc1'
      actualParameter 'project_Name', 'EC-Admin Test'
    }

    step 'Clean', {
      description = ''
      alwaysRun = '0'
      broadcast = '0'
      command = '''$[/projects/EC-Admin/scripts/perlHeaderJSON]

my $proj="$[/myProject/projectName]";

$ec->deleteProcedure($proj, "RP_Proc1");
$ec->deleteProcedure($proj, "RP_Proc2");
'''
      condition = ''
      errorHandling = 'failProcedure'
      exclusiveMode = 'none'
      logFileName = ''
      parallel = '0'
      postProcessor = ''
      precondition = ''
      releaseMode = 'none'
      resourceName = ''
      shell = 'ec-perl'
      subprocedure = null
      subproject = null
      timeLimit = ''
      timeLimitUnits = 'minutes'
      workingDirectory = ''
      workspaceName = ''
    }
  }

  tag 'ec-admin'

  // Custom properties

  property 'PS', {
    description = ''

    // Custom properties

    property 'cleanup', {

      // Custom properties

      property 'config', {

        // Custom properties

        property 'timeout', value: '600', {
          description = ''
          expandable = '1'
          suppressValueTracking = '0'
        }
      }
    }

    property 'licenseLogger', {

      // Custom properties

      property 'config', {

        // Custom properties
        cleanpOldJobs = '1'

        property 'emailConfig', value: 'default', {
          expandable = '1'
          suppressValueTracking = '0'
        }
        emailTo = 'admin'

        property 'resource', value: 'local', {
          expandable = '1'
          suppressValueTracking = '0'
        }

        property 'workspace', value: 'default', {
          expandable = '1'
          suppressValueTracking = '0'
        }
      }
    }
  }
  ec_tags = ' ec-admin '
  token1 = '1'
  token2 = '-1'
  token3 = ''
}

2019-03-01T16:11:19.411 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "project": {
        "projectId": "a2d9eb9e-3c33-11e9-b2a8-0a03fa837144",
        "projectName": "EC-Admin_Test",
        "createTime": "2019-03-01T15:06:48.055Z",
        "description": "procedure testing",
        "lastModifiedBy": "admin",
        "modifyTime": "2019-03-01T15:06:48.055Z",
        "owner": "admin",
        "processCount": "0",
        "propertySheetId": "a2d9eba0-3c33-11e9-b2a8-0a03fa837144",
        "stageCount": "0",
        "tracked": "1"
    }
}
2019-03-01T16:11:19.451 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: promotePlugin(pluginName: "EC-Admin")
2019-03-01T16:11:20.083 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "plugin": {
        "pluginId": "6a43c592-b2f8-11e8-addf-0a03fa837144",
        "pluginName": "EC-Admin-3.1.6.709",
        "author": "L. Rochette",
        "createTime": "2018-09-07T23:47:43.667Z",
        "description": "A set of administrative tasks to help manage your server.",
        "label": "EC-Admin",
        "lastModifiedBy": "admin",
        "modifyTime": "2018-09-07T23:51:26.644Z",
        "owner": "admin",
        "pluginKey": "EC-Admin",
        "pluginVersion": "3.1.6.709",
        "pluginWizardBased": "1",
        "projectName": "EC-Admin-3.1.6.709",
        "promoted": "1",
        "propertySheetId": "6a43c594-b2f8-11e8-addf-0a03fa837144",
        "supportsConfigurations": "0"
    }
}
2019-03-01T16:11:20.084 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getProperty("/plugins/EC-Admin/pluginVersion")
2019-03-01T16:11:20.712 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyName": "pluginVersion",
        "createTime": "2018-09-07T23:47:43.667Z",
        "description": "'pluginVersion' is a built-in property on plugin 'EC-Admin-3.1.6.709'",
        "expandable": "1",
        "modifyTime": "2018-09-07T23:51:26.644Z",
        "pathRelativeToOwner": "pluginVersion",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "3.1.6.709"
    }
}
2019-03-01T16:11:20.713 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getProperty("/plugins/EC-Admin/project/ec_visibility")
2019-03-01T16:11:21.330 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyId": "6b385edc-b2f8-11e8-9035-0a03fa837144",
        "propertyName": "ec_visibility",
        "createTime": "2018-09-07T23:47:44.670Z",
        "expandable": "1",
        "lastModifiedBy": "admin",
        "modifyTime": "2018-09-07T23:47:44.670Z",
        "owner": "admin",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "pickListOnly"
    }
}
2019-03-01T16:11:21.364 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: 
      setProperty(
        propertyName: "/plugins/EC-Admin/project/ec_debug_logToProperty",
        value: "/myJob/debug_logs"
      )
    
2019-03-01T16:11:22.070 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyId": "82ed8a3b-3c26-11e9-989d-0a03fa837144",
        "propertyName": "ec_debug_logToProperty",
        "createTime": "2019-03-01T13:32:51.428Z",
        "expandable": "1",
        "lastModifiedBy": "admin",
        "modifyTime": "2019-03-01T13:32:51.428Z",
        "owner": "admin",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "/myJob/debug_logs"
    }
}
2019-03-01T16:11:22.071 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: runProcedure(projectName: "EC-Admin_Test", procedureName: "scriptsPropertiesTest") 
2019-03-01T16:11:22.716 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "jobId": "463c17f9-3c34-11e9-8951-0a03fa837144"
}
2019-03-01T16:11:22.723 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: waitForCompletion jobId:'463c17f9-3c34-11e9-8951-0a03fa837144'
2019-03-01T16:21:34.337 | DEBUG | c.e.spec.SpockTestSupport | Commander server url: https://ps9.ecloud-kdemo.com:8443
2019-03-01T16:21:36.620 | DEBUG | c.e.spec.SpockTestSupport | login using admin
2019-03-01T16:21:37.490 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: resource 'ecadmin-lin', hostname: 'localhost' 
2019-03-01T16:21:38.725 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "resource": {
        "resourceId": "417a4a18-3c34-11e9-8951-0a03fa837144",
        "resourceName": "ecadmin-lin",
        "agentState": {
            "alive": "0",
            "details": "This agent has not been pinged yet",
            "message": "This agent has not been pinged yet",
            "state": "unknown",
            "time": "2018-10-12T20:18:08.508Z"
        },
        "createTime": "2019-03-01T15:11:14.572Z",
        "createTimeFormatted": "2019-03-01 15:11:14 UTC",
        "hostType": "CONCURRENT",
        "lastModifiedBy": "admin",
        "lastRunTimeFormatted": "",
        "modifyTime": "2019-03-01T15:11:14.572Z",
        "owner": "admin",
        "port": "",
        "propertySheetId": "417a4a1a-3c34-11e9-8951-0a03fa837144",
        "proxyPort": "",
        "resourceAgentState": "unknown",
        "resourceDisabled": "0",
        "runningTime": "0h 10min",
        "stepLimit": "",
        "trusted": "0",
        "useSSL": "1",
        "zoneName": "default"
    }
}
2019-03-01T16:21:38.753 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: 
project 'EC-Admin_Test', {
  description = 'procedure testing'

  procedure 'artifactRepoSyncTesting', {
    description = 'Do not delete. Called by ec-spec-tools'

    formalParameter 'repoRes', defaultValue: 'win8', {
      description = 'The resource of the repo to test'
      required = '1'
      type = 'entry'
    }

    step 'delete', {
      command = '''$[/plugins[EC-Admin]project/scripts/perlHeaderJSON]

use File::Path;

my $dir=$ENV{\'COMMANDER_DATA\'};

if (! $dir) {
  printf("Error: COMMANDER_DATA undefined: $dir\\n");
  exit(1);
}
printf("Delete $dir/repository-data");
rmtree ("$dir/repository-data");
'''
      errorHandling = 'failProcedure'
      resourceName = '$[repoRes]'
      shell = 'ec-perl'
     }

    step 'sync', {
      errorHandling = 'failProcedure'
      subprocedure = 'artifactRepositorySynchronization'
      subproject = '/plugins/EC-Admin/project'
      actualParameter 'artifactRepositoryList', 'default'
      actualParameter 'artifactRepositoryResource', '$[repoRes]'
      actualParameter 'artifactVersionPattern', 'AA:*'
      actualParameter 'batchSize', '25'
    }

    step 'verify', {
      command = '''$[/plugins[EC-Admin]project/scripts/perlHeaderJSON]

use File::Path;

my $dir=$ENV{\'COMMANDER_DATA\'};

if (! $dir) {
  printf("Error: COMMANDER_DATA undefined: $dir\\n");
  exit(1);
}
if (! -d "$dir/repository-data/AA/OLHp/3.3.3") {
	printf("Error: cannot find AA/OLHp/3.3.3 in $dir/repository-data");
    exit(1);
}

if (! -d "$dir/repository-data/AA/OLHp/3.3.4") {
	printf("Error: cannot find AA/OLHp/3.3.4 in $dir/repository-data");
    exit(1);
}
'''
      errorHandling = 'failProcedure'
      resourceName = '$[repoRes]'
      shell = 'ec-perl'
     }
  }

  procedure 'cleanJob-LocalWorkspace', {
    step 'echo', {
      command = '''echo "Hellow world"'''
      resourceName = 'ecadmin-win'
      workspaceName = 'ecadmin-win-wks'
    }

    step 'build', {
      errorHandling = 'failProcedure'
       subprocedure = 'Build'
      subproject = 'Training_user'
      actualParameter 'Build Label', 'gfoo'
    }
  }

  procedure 'getPS', {
    description = '''to be called by ntest to verify getP and getPS work as expected
Issue #20'''

    step 'getPSJSON', {
       command = '''$[/projects/EC-Admin/scripts/perlHeaderJSON]

my $hRef=getPS("/server/EC-Admin", 1);
print Dumper($hRef);

my $val=$hRef->{licenseLogger}->{config}->{emailTo};
$ec->setProperty("summary", $val);
exit ($val ne "$[/server/EC-Admin/licenseLogger/config/emailTo]");

$[/projects/EC-Admin/scripts/perlLibJSON]
'''
      shell = 'ec-perl'
    }

    step 'getPSXML', {
      command = '''$[/projects/EC-Admin/scripts/perlHeader]
use Data::Dumper;

my $hRef=getPS("/myProject/PS", 1);
print Dumper($hRef);

my $val=$hRef->{licenseLogger}->{config}->{emailTo};
$ec->setProperty("summary", $val);
exit ($val ne "$[/myProject/PS/licenseLogger/config/emailTo]");

$[/projects/EC-Admin/scripts/perlLib]
'''
      shell = 'ec-perl'
     }
  }

  procedure 'questionMark', {

    step 'rerun?', {
      command = 'echo "I\'m rerunning"'
    }
  }

  procedure 'RP_Test2', {

    step 'step2_1', {
      subprocedure = 'RP_Proc1'
    }
  }

  procedure 'scriptsPropertiesTest', {
    description = '''Test the code in the scripts PS to be sure they can be loaded from a different project
Called by NTEST '''

    step 'humanSize', {
      description = 'Should return 3 Mb'
      command = '''$[/plugins/[EC-Admin]/project/scripts/perlHeaderJSON]
my $res=humanSize(3*1024*1024);

printf("size=%s\\n",$res);
$ec->setProperty("result", $res);

$[/plugins/[EC-Admin]/project/scripts/perlCommonLib]'''
      resourceName = 'ecadmin-lin'
      shell = 'ec-perl'
    }
  }

  procedure 'semaphoreTest', {
    jobNameTemplate = '$[/server/jobTemplate]'

    formalParameter 'token', defaultValue: '1', {
      required = '1'
      simpleList = '1|2|3'
      type = 'radio'
    }

    step 'acqToken', {
      subprocedure = 'acquireSemaphore'
      subproject = '/plugins/EC-Admin/project'
      actualParameter 'maxSemaphoreValue', '1'
      actualParameter 'semaphoreProperty', '/projects/EC-Admin Test/token$[token]'
      actualParameter 'serializationResource', 'Serializer'
    }

    step 'sleep', {
      command = 'sleep 10'
    }

    step 'relToken', {
      subprocedure = 'releaseSemaphore'
      subproject = '/plugins/EC-Admin/project'
      actualParameter 'semaphoreProperty', '/projects/EC-Admin Test/token$[token]'
      actualParameter 'serializationResource', 'Serializer'
    }

    // Custom properties

    property 'ec_customEditorData', {

      // Custom properties

      property 'parameters', {

        // Custom properties

        property 'token', {

          // Custom properties

          property 'options', {

            // Custom properties
            list = '1|2|3'

            property 'type', value: 'simpleList', {
              expandable = '1'
              suppressValueTracking = '0'
            }
          }
          formType = 'standard'
        }
      }
    }
  }

  procedure 'TestRemoveParameter', {

    step 'CreateProcedure', {
      command = '''$[/projects/EC-Admin/scripts/perlHeaderJSON]

my $proj="$[/myProject/projectName]";

#
# Create callee
#
my($ok,$json)=InvokeCOmmander(\'getProcedure\', "RP_Proc1);
if (! $ok) {
  $ec->createProcedure($proj, "RP_Proc1");
  $ec->createFormalParameter($proj, "RP_Proc1", "param1", {description=>"Test param1"});
}

#
# Create Caller
#
$ec->createProcedure($proj, "RP_Test2");
$ec->createStep($proj, "RP_Test2", "step2_1",
			{
              actualParameter=>[{actualParameterName => \'param1\', value => \'main\'}],
              subprocedure=>"RP_Proc1"
            }
         );

$[/projects/EC-Admin/scripts/perlLibJSON]
'''
      shell = 'ec-perl'
    }

    step 'callTest', {
      subprocedure = 'removeParameterFromCall'
      subproject = '/plugins/EC-Admin/project'
      actualParameter 'debug', 'true'
      actualParameter 'delete', 'true'
      actualParameter 'parameter_Name', 'param1'
      actualParameter 'procedure_Name', 'RP_Proc1'
      actualParameter 'project_Name', 'EC-Admin Test'
    }

    step 'Clean', {
      command = '''$[/projects/EC-Admin/scripts/perlHeaderJSON]

my $proj="$[/myProject/projectName]";

$ec->deleteProcedure($proj, "RP_Proc1");
$ec->deleteProcedure($proj, "RP_Proc2");
'''
      shell = 'ec-perl'
    }
  }

  tag 'ec-admin'

  // Custom properties

  property 'PS', {
    description = ''

    // Custom properties

    property 'cleanup', {

      // Custom properties

      property 'config', {

        // Custom properties

        property 'timeout', value: '600', {
          description = ''
          expandable = '1'
          suppressValueTracking = '0'
        }
      }
    }

    property 'licenseLogger', {

      // Custom properties

      property 'config', {

        // Custom properties
        cleanpOldJobs = '1'

        property 'emailConfig', value: 'default', {
          expandable = '1'
          suppressValueTracking = '0'
        }
        emailTo = 'admin'

        property 'resource', value: 'local', {
          expandable = '1'
          suppressValueTracking = '0'
        }

        property 'workspace', value: 'default', {
          expandable = '1'
          suppressValueTracking = '0'
        }
      }
    }
  }
  token1 = '1'
  token2 = '-1'
  token3 = ''
}

2019-03-01T16:21:42.887 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "project": {
        "projectId": "a2d9eb9e-3c33-11e9-b2a8-0a03fa837144",
        "projectName": "EC-Admin_Test",
        "createTime": "2019-03-01T15:06:48.055Z",
        "description": "procedure testing",
        "lastModifiedBy": "admin",
        "modifyTime": "2019-03-01T15:06:48.055Z",
        "owner": "admin",
        "processCount": "0",
        "propertySheetId": "a2d9eba0-3c33-11e9-b2a8-0a03fa837144",
        "stageCount": "0",
        "tracked": "1"
    }
}
2019-03-01T16:21:42.910 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: promotePlugin(pluginName: "EC-Admin")
2019-03-01T16:21:43.534 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "plugin": {
        "pluginId": "6a43c592-b2f8-11e8-addf-0a03fa837144",
        "pluginName": "EC-Admin-3.1.6.709",
        "author": "L. Rochette",
        "createTime": "2018-09-07T23:47:43.667Z",
        "description": "A set of administrative tasks to help manage your server.",
        "label": "EC-Admin",
        "lastModifiedBy": "admin",
        "modifyTime": "2018-09-07T23:51:26.644Z",
        "owner": "admin",
        "pluginKey": "EC-Admin",
        "pluginVersion": "3.1.6.709",
        "pluginWizardBased": "1",
        "projectName": "EC-Admin-3.1.6.709",
        "promoted": "1",
        "propertySheetId": "6a43c594-b2f8-11e8-addf-0a03fa837144",
        "supportsConfigurations": "0"
    }
}
2019-03-01T16:21:43.536 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getProperty("/plugins/EC-Admin/pluginVersion")
2019-03-01T16:21:44.158 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyName": "pluginVersion",
        "createTime": "2018-09-07T23:47:43.667Z",
        "description": "'pluginVersion' is a built-in property on plugin 'EC-Admin-3.1.6.709'",
        "expandable": "1",
        "modifyTime": "2018-09-07T23:51:26.644Z",
        "pathRelativeToOwner": "pluginVersion",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "3.1.6.709"
    }
}
2019-03-01T16:21:44.159 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getProperty("/plugins/EC-Admin/project/ec_visibility")
2019-03-01T16:21:44.778 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyId": "6b385edc-b2f8-11e8-9035-0a03fa837144",
        "propertyName": "ec_visibility",
        "createTime": "2018-09-07T23:47:44.670Z",
        "expandable": "1",
        "lastModifiedBy": "admin",
        "modifyTime": "2018-09-07T23:47:44.670Z",
        "owner": "admin",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "pickListOnly"
    }
}
2019-03-01T16:21:44.800 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: 
      setProperty(
        propertyName: "/plugins/EC-Admin/project/ec_debug_logToProperty",
        value: "/myJob/debug_logs"
      )
    
2019-03-01T16:21:45.430 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyId": "82ed8a3b-3c26-11e9-989d-0a03fa837144",
        "propertyName": "ec_debug_logToProperty",
        "createTime": "2019-03-01T13:32:51.428Z",
        "expandable": "1",
        "lastModifiedBy": "admin",
        "modifyTime": "2019-03-01T13:32:51.428Z",
        "owner": "admin",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "/myJob/debug_logs"
    }
}
2019-03-01T16:21:45.431 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: runProcedure(projectName: "EC-Admin_Test", procedureName: "scriptsPropertiesTest") 
2019-03-01T16:21:46.194 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "jobId": "b9cb6aad-3c35-11e9-8e37-0a03fa837144"
}
2019-03-01T16:21:46.199 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: waitForCompletion jobId:'b9cb6aad-3c35-11e9-8e37-0a03fa837144'
2019-03-01T16:23:39.358 | DEBUG | c.e.spec.SpockTestSupport | Response {
    
}
2019-03-01T16:23:39.363 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getProperty(propertyName: '/myJob/debug_logs', jobId: 'b9cb6aad-3c35-11e9-8e37-0a03fa837144')
2019-03-01T16:23:39.981 | DEBUG | c.e.spec.SpockTestSupport | Response {
    
}
2019-03-01T16:23:39.986 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getJobStatus jobId: 'b9cb6aad-3c35-11e9-8e37-0a03fa837144'
2019-03-01T16:23:40.598 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "jobId": "b9cb6aad-3c35-11e9-8e37-0a03fa837144",
    "outcome": "success",
    "status": "completed"
}
2019-03-01T16:23:40.599 | DEBUG | c.e.spec.SpockTestSupport | DSL: runProcedure(projectName: "EC-Admin_Test", procedureName: "scriptsPropertiesTest") 
2019-03-01T16:23:40.599 | DEBUG | c.e.spec.SpockTestSupport | Logs: Possible exception in logs; check job
2019-03-01T16:23:40.599 | DEBUG | c.e.spec.SpockTestSupport | Outcome: success
2019-03-01T16:23:40.600 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getProperty(propertyName: '/myJob/jobSteps/humanSize/result', jobId: 'b9cb6aad-3c35-11e9-8e37-0a03fa837144')
2019-03-01T16:23:41.222 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyId": "fd423b16-3c35-11e9-85e2-0a03fa837144",
        "propertyName": "result",
        "createTime": "2019-03-01T15:23:39.138Z",
        "expandable": "1",
        "lastModifiedBy": "project: EC-Admin_Test",
        "modifyTime": "2019-03-01T15:23:39.138Z",
        "owner": "project: EC-Admin_Test",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "3.00 MB"
    }
}
2019-03-01T16:23:41.224 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getProperty(propertyName: '/myJob/jobSteps/humanSize/exitCode', jobId: 'b9cb6aad-3c35-11e9-8e37-0a03fa837144')
2019-03-01T16:23:41.848 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyName": "exitCode",
        "createTime": "2019-03-01T15:21:46.101Z",
        "description": "'exitCode' is a built-in property on jobStep 'humanSize'",
        "expandable": "1",
        "modifyTime": "2019-03-01T15:23:39.201Z",
        "pathRelativeToOwner": "exitCode",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "0"
    }
}
2019-03-01T16:23:41.857 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: deleteResource(resourceName: 'ecadmin-lin')
2019-03-01T16:23:42.506 | DEBUG | c.e.spec.SpockTestSupport | Response {
    
}
2019-03-01T16:23:43.627 | DEBUG | c.e.spec.SpockTestSupport | Commander server url: https://ps9.ecloud-kdemo.com:8443
2019-03-01T16:23:44.646 | DEBUG | c.e.spec.SpockTestSupport | login using admin
2019-03-01T16:24:49.971 | DEBUG | c.e.spec.SpockTestSupport | Commander server url: https://ps9.ecloud-kdemo.com:8443
2019-03-01T16:24:52.084 | DEBUG | c.e.spec.SpockTestSupport | login using admin
2019-03-01T16:24:53.017 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: resource 'ecadmin-lin', hostname: 'localhost' 
2019-03-01T16:24:53.739 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "resource": {
        "resourceId": "299bd696-3c36-11e9-85e2-0a03fa837144",
        "resourceName": "ecadmin-lin",
        "agentState": {
            "alive": "0",
            "details": "This agent has not been pinged yet",
            "message": "This agent has not been pinged yet",
            "state": "unknown",
            "time": "2018-10-12T20:18:08.508Z"
        },
        "createTime": "2019-03-01T15:24:53.525Z",
        "createTimeFormatted": "2019-03-01 15:24:53 UTC",
        "hostType": "CONCURRENT",
        "lastModifiedBy": "admin",
        "lastRunTimeFormatted": "",
        "modifyTime": "2019-03-01T15:24:53.525Z",
        "owner": "admin",
        "port": "",
        "propertySheetId": "299bd698-3c36-11e9-85e2-0a03fa837144",
        "proxyPort": "",
        "resourceAgentState": "unknown",
        "resourceDisabled": "0",
        "runningTime": "0h 0min",
        "stepLimit": "",
        "trusted": "0",
        "useSSL": "1",
        "zoneName": "default"
    }
}
2019-03-01T16:24:53.767 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: 
project 'EC-Admin_Test', {
  description = 'procedure testing'

  procedure 'artifactRepoSyncTesting', {
    description = 'Do not delete. Called by ec-spec-tools'

    formalParameter 'repoRes', defaultValue: 'win8', {
      description = 'The resource of the repo to test'
      required = '1'
      type = 'entry'
    }

    step 'delete', {
      command = '''$[/plugins[EC-Admin]project/scripts/perlHeaderJSON]

use File::Path;

my $dir=$ENV{\'COMMANDER_DATA\'};

if (! $dir) {
  printf("Error: COMMANDER_DATA undefined: $dir\\n");
  exit(1);
}
printf("Delete $dir/repository-data");
rmtree ("$dir/repository-data");
'''
      errorHandling = 'failProcedure'
      resourceName = '$[repoRes]'
      shell = 'ec-perl'
     }

    step 'sync', {
      errorHandling = 'failProcedure'
      subprocedure = 'artifactRepositorySynchronization'
      subproject = '/plugins/EC-Admin/project'
      actualParameter 'artifactRepositoryList', 'default'
      actualParameter 'artifactRepositoryResource', '$[repoRes]'
      actualParameter 'artifactVersionPattern', 'AA:*'
      actualParameter 'batchSize', '25'
    }

    step 'verify', {
      command = '''$[/plugins[EC-Admin]project/scripts/perlHeaderJSON]

use File::Path;

my $dir=$ENV{\'COMMANDER_DATA\'};

if (! $dir) {
  printf("Error: COMMANDER_DATA undefined: $dir\\n");
  exit(1);
}
if (! -d "$dir/repository-data/AA/OLHp/3.3.3") {
	printf("Error: cannot find AA/OLHp/3.3.3 in $dir/repository-data");
    exit(1);
}

if (! -d "$dir/repository-data/AA/OLHp/3.3.4") {
	printf("Error: cannot find AA/OLHp/3.3.4 in $dir/repository-data");
    exit(1);
}
'''
      errorHandling = 'failProcedure'
      resourceName = '$[repoRes]'
      shell = 'ec-perl'
     }
  }

  procedure 'cleanJob-LocalWorkspace', {
    step 'echo', {
      command = '''echo "Hellow world"'''
      resourceName = 'ecadmin-win'
      workspaceName = 'ecadmin-win-wks'
    }

    step 'build', {
      errorHandling = 'failProcedure'
       subprocedure = 'Build'
      subproject = 'Training_user'
      actualParameter 'Build Label', 'gfoo'
    }
  }

  procedure 'getPS', {
    description = '''to be called by ntest to verify getP and getPS work as expected
Issue #20'''

    step 'getPSJSON', {
       command = '''$[/projects/EC-Admin/scripts/perlHeaderJSON]

my $hRef=getPS("/server/EC-Admin", 1);
print Dumper($hRef);

my $val=$hRef->{licenseLogger}->{config}->{emailTo};
$ec->setProperty("summary", $val);
exit ($val ne "$[/server/EC-Admin/licenseLogger/config/emailTo]");

$[/projects/EC-Admin/scripts/perlLibJSON]
'''
      shell = 'ec-perl'
    }

    step 'getPSXML', {
      command = '''$[/projects/EC-Admin/scripts/perlHeader]
use Data::Dumper;

my $hRef=getPS("/myProject/PS", 1);
print Dumper($hRef);

my $val=$hRef->{licenseLogger}->{config}->{emailTo};
$ec->setProperty("summary", $val);
exit ($val ne "$[/myProject/PS/licenseLogger/config/emailTo]");

$[/projects/EC-Admin/scripts/perlLib]
'''
      shell = 'ec-perl'
     }
  }

  procedure 'questionMark', {

    step 'rerun?', {
      command = 'echo "I\'m rerunning"'
    }
  }

  procedure 'RP_Test2', {

    step 'step2_1', {
      subprocedure = 'RP_Proc1'
    }
  }

  procedure 'scriptsPropertiesTest', {
    description = '''Test the code in the scripts PS to be sure they can be loaded from a different project
Called by NTEST '''

    step 'humanSize', {
      description = 'Should return 3 Mb'
      command = '''$[/plugins/[EC-Admin]/project/scripts/perlHeaderJSON]
my $res=humanSize(3*1024*1024);

printf("size=%s\\n",$res);
$ec->setProperty("result", $res);

$[/plugins/[EC-Admin]/project/scripts/perlCommonLib]'''
      resourceName = 'ecadmin-lin'
      shell = 'ec-perl'
    }
  }

  procedure 'semaphoreTest', {
    jobNameTemplate = '$[/server/jobTemplate]'

    formalParameter 'token', defaultValue: '1', {
      required = '1'
      simpleList = '1|2|3'
      type = 'radio'
    }

    step 'acqToken', {
      subprocedure = 'acquireSemaphore'
      subproject = '/plugins/EC-Admin/project'
      actualParameter 'maxSemaphoreValue', '1'
      actualParameter 'semaphoreProperty', '/projects/EC-Admin Test/token$[token]'
      actualParameter 'serializationResource', 'Serializer'
    }

    step 'sleep', {
      command = 'sleep 10'
    }

    step 'relToken', {
      subprocedure = 'releaseSemaphore'
      subproject = '/plugins/EC-Admin/project'
      actualParameter 'semaphoreProperty', '/projects/EC-Admin Test/token$[token]'
      actualParameter 'serializationResource', 'Serializer'
    }

    // Custom properties

    property 'ec_customEditorData', {

      // Custom properties

      property 'parameters', {

        // Custom properties

        property 'token', {

          // Custom properties

          property 'options', {

            // Custom properties
            list = '1|2|3'

            property 'type', value: 'simpleList', {
              expandable = '1'
              suppressValueTracking = '0'
            }
          }
          formType = 'standard'
        }
      }
    }
  }

  procedure 'TestRemoveParameter', {

    step 'CreateProcedure', {
      command = '''$[/projects/EC-Admin/scripts/perlHeaderJSON]

my $proj="$[/myProject/projectName]";

#
# Create callee
#
my($ok,$json)=InvokeCOmmander(\'getProcedure\', "RP_Proc1);
if (! $ok) {
  $ec->createProcedure($proj, "RP_Proc1");
  $ec->createFormalParameter($proj, "RP_Proc1", "param1", {description=>"Test param1"});
}

#
# Create Caller
#
$ec->createProcedure($proj, "RP_Test2");
$ec->createStep($proj, "RP_Test2", "step2_1",
			{
              actualParameter=>[{actualParameterName => \'param1\', value => \'main\'}],
              subprocedure=>"RP_Proc1"
            }
         );

$[/projects/EC-Admin/scripts/perlLibJSON]
'''
      shell = 'ec-perl'
    }

    step 'callTest', {
      subprocedure = 'removeParameterFromCall'
      subproject = '/plugins/EC-Admin/project'
      actualParameter 'debug', 'true'
      actualParameter 'delete', 'true'
      actualParameter 'parameter_Name', 'param1'
      actualParameter 'procedure_Name', 'RP_Proc1'
      actualParameter 'project_Name', 'EC-Admin Test'
    }

    step 'Clean', {
      command = '''$[/projects/EC-Admin/scripts/perlHeaderJSON]

my $proj="$[/myProject/projectName]";

$ec->deleteProcedure($proj, "RP_Proc1");
$ec->deleteProcedure($proj, "RP_Proc2");
'''
      shell = 'ec-perl'
    }
  }

  tag 'ec-admin'

  // Custom properties

  property 'PS', {
    description = ''

    // Custom properties

    property 'cleanup', {

      // Custom properties

      property 'config', {

        // Custom properties

        property 'timeout', value: '600', {
          description = ''
          expandable = '1'
          suppressValueTracking = '0'
        }
      }
    }

    property 'licenseLogger', {

      // Custom properties

      property 'config', {

        // Custom properties
        cleanpOldJobs = '1'

        property 'emailConfig', value: 'default', {
          expandable = '1'
          suppressValueTracking = '0'
        }
        emailTo = 'admin'

        property 'resource', value: 'local', {
          expandable = '1'
          suppressValueTracking = '0'
        }

        property 'workspace', value: 'default', {
          expandable = '1'
          suppressValueTracking = '0'
        }
      }
    }
  }
  token1 = '1'
  token2 = '-1'
  token3 = ''
}

2019-03-01T16:24:58.007 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "project": {
        "projectId": "a2d9eb9e-3c33-11e9-b2a8-0a03fa837144",
        "projectName": "EC-Admin_Test",
        "createTime": "2019-03-01T15:06:48.055Z",
        "description": "procedure testing",
        "lastModifiedBy": "admin",
        "modifyTime": "2019-03-01T15:06:48.055Z",
        "owner": "admin",
        "processCount": "0",
        "propertySheetId": "a2d9eba0-3c33-11e9-b2a8-0a03fa837144",
        "stageCount": "0",
        "tracked": "1"
    }
}
2019-03-01T16:24:58.008 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: pingResource(resourceName: 'ecadmin-lin')
2019-03-01T16:25:00.826 | DEBUG | c.e.spec.SpockTestSupport | Commander server url: https://ps9.ecloud-kdemo.com:8443
2019-03-01T16:25:01.864 | DEBUG | c.e.spec.SpockTestSupport | login using admin
2019-03-01T16:27:34.781 | DEBUG | c.e.spec.SpockTestSupport | Commander server url: https://ps9.ecloud-kdemo.com:8443
2019-03-01T16:27:37.024 | DEBUG | c.e.spec.SpockTestSupport | login using admin
2019-03-01T16:27:37.915 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: resource 'ecadmin-lin', hostName: 'localhost' 
2019-03-01T16:27:38.616 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "resource": {
        "resourceId": "299bd696-3c36-11e9-85e2-0a03fa837144",
        "resourceName": "ecadmin-lin",
        "agentState": {
            "alive": "1",
            "details": "The agent is alive",
            "hostOS": "Linux edwardjones 4.4.0-1075-aws #85-Ubuntu SMP Thu Jan 17 17:15:12 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux",
            "hostPlatform": "linux",
            "message": "The agent is alive",
            "pingToken": "1551275940",
            "protocolVersion": "6",
            "state": "alive",
            "time": "2018-05-29T20:37:19.550Z",
            "version": "9.0.0.135442"
        },
        "createTime": "2019-03-01T15:24:53.525Z",
        "createTimeFormatted": "2019-03-01 15:24:53 UTC",
        "hostName": "localhost",
        "hostOS": "Linux edwardjones 4.4.0-1075-aws #85-Ubuntu SMP Thu Jan 17 17:15:12 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux",
        "hostPlatform": "linux",
        "hostType": "CONCURRENT",
        "lastModifiedBy": "admin",
        "lastRunTimeFormatted": "",
        "modifyTime": "2019-03-01T15:27:38.426Z",
        "owner": "admin",
        "port": "",
        "propertySheetId": "299bd698-3c36-11e9-85e2-0a03fa837144",
        "proxyPort": "",
        "resourceAgentState": "alive",
        "resourceAgentVersion": "9.0.0.135442",
        "resourceDisabled": "0",
        "runningTime": "0h 2min",
        "stepLimit": "",
        "trusted": "0",
        "useSSL": "1",
        "zoneName": "default"
    }
}
2019-03-01T16:27:38.644 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: 
project 'EC-Admin_Test', {
  description = 'procedure testing'

  procedure 'artifactRepoSyncTesting', {
    description = 'Do not delete. Called by ec-spec-tools'

    formalParameter 'repoRes', defaultValue: 'win8', {
      description = 'The resource of the repo to test'
      required = '1'
      type = 'entry'
    }

    step 'delete', {
      command = '''$[/plugins[EC-Admin]project/scripts/perlHeaderJSON]

use File::Path;

my $dir=$ENV{\'COMMANDER_DATA\'};

if (! $dir) {
  printf("Error: COMMANDER_DATA undefined: $dir\\n");
  exit(1);
}
printf("Delete $dir/repository-data");
rmtree ("$dir/repository-data");
'''
      errorHandling = 'failProcedure'
      resourceName = '$[repoRes]'
      shell = 'ec-perl'
     }

    step 'sync', {
      errorHandling = 'failProcedure'
      subprocedure = 'artifactRepositorySynchronization'
      subproject = '/plugins/EC-Admin/project'
      actualParameter 'artifactRepositoryList', 'default'
      actualParameter 'artifactRepositoryResource', '$[repoRes]'
      actualParameter 'artifactVersionPattern', 'AA:*'
      actualParameter 'batchSize', '25'
    }

    step 'verify', {
      command = '''$[/plugins[EC-Admin]project/scripts/perlHeaderJSON]

use File::Path;

my $dir=$ENV{\'COMMANDER_DATA\'};

if (! $dir) {
  printf("Error: COMMANDER_DATA undefined: $dir\\n");
  exit(1);
}
if (! -d "$dir/repository-data/AA/OLHp/3.3.3") {
	printf("Error: cannot find AA/OLHp/3.3.3 in $dir/repository-data");
    exit(1);
}

if (! -d "$dir/repository-data/AA/OLHp/3.3.4") {
	printf("Error: cannot find AA/OLHp/3.3.4 in $dir/repository-data");
    exit(1);
}
'''
      errorHandling = 'failProcedure'
      resourceName = '$[repoRes]'
      shell = 'ec-perl'
     }
  }

  procedure 'cleanJob-LocalWorkspace', {
    step 'echo', {
      command = '''echo "Hellow world"'''
      resourceName = 'ecadmin-win'
      workspaceName = 'ecadmin-win-wks'
    }

    step 'build', {
      errorHandling = 'failProcedure'
       subprocedure = 'Build'
      subproject = 'Training_user'
      actualParameter 'Build Label', 'gfoo'
    }
  }

  procedure 'getPS', {
    description = '''to be called by ntest to verify getP and getPS work as expected
Issue #20'''

    step 'getPSJSON', {
       command = '''$[/projects/EC-Admin/scripts/perlHeaderJSON]

my $hRef=getPS("/server/EC-Admin", 1);
print Dumper($hRef);

my $val=$hRef->{licenseLogger}->{config}->{emailTo};
$ec->setProperty("summary", $val);
exit ($val ne "$[/server/EC-Admin/licenseLogger/config/emailTo]");

$[/projects/EC-Admin/scripts/perlLibJSON]
'''
      shell = 'ec-perl'
    }

    step 'getPSXML', {
      command = '''$[/projects/EC-Admin/scripts/perlHeader]
use Data::Dumper;

my $hRef=getPS("/myProject/PS", 1);
print Dumper($hRef);

my $val=$hRef->{licenseLogger}->{config}->{emailTo};
$ec->setProperty("summary", $val);
exit ($val ne "$[/myProject/PS/licenseLogger/config/emailTo]");

$[/projects/EC-Admin/scripts/perlLib]
'''
      shell = 'ec-perl'
     }
  }

  procedure 'questionMark', {

    step 'rerun?', {
      command = 'echo "I\'m rerunning"'
    }
  }

  procedure 'RP_Test2', {

    step 'step2_1', {
      subprocedure = 'RP_Proc1'
    }
  }

  procedure 'scriptsPropertiesTest', {
    description = '''Test the code in the scripts PS to be sure they can be loaded from a different project
Called by NTEST '''

    step 'humanSize', {
      description = 'Should return 3 Mb'
      command = '''$[/plugins/[EC-Admin]/project/scripts/perlHeaderJSON]
my $res=humanSize(3*1024*1024);

printf("size=%s\\n",$res);
$ec->setProperty("result", $res);

$[/plugins/[EC-Admin]/project/scripts/perlCommonLib]'''
      resourceName = 'ecadmin-lin'
      shell = 'ec-perl'
    }
  }

  procedure 'semaphoreTest', {
    jobNameTemplate = '$[/server/jobTemplate]'

    formalParameter 'token', defaultValue: '1', {
      required = '1'
      simpleList = '1|2|3'
      type = 'radio'
    }

    step 'acqToken', {
      subprocedure = 'acquireSemaphore'
      subproject = '/plugins/EC-Admin/project'
      actualParameter 'maxSemaphoreValue', '1'
      actualParameter 'semaphoreProperty', '/projects/EC-Admin Test/token$[token]'
      actualParameter 'serializationResource', 'Serializer'
    }

    step 'sleep', {
      command = 'sleep 10'
    }

    step 'relToken', {
      subprocedure = 'releaseSemaphore'
      subproject = '/plugins/EC-Admin/project'
      actualParameter 'semaphoreProperty', '/projects/EC-Admin Test/token$[token]'
      actualParameter 'serializationResource', 'Serializer'
    }

    // Custom properties

    property 'ec_customEditorData', {

      // Custom properties

      property 'parameters', {

        // Custom properties

        property 'token', {

          // Custom properties

          property 'options', {

            // Custom properties
            list = '1|2|3'

            property 'type', value: 'simpleList', {
              expandable = '1'
              suppressValueTracking = '0'
            }
          }
          formType = 'standard'
        }
      }
    }
  }

  procedure 'TestRemoveParameter', {

    step 'CreateProcedure', {
      command = '''$[/projects/EC-Admin/scripts/perlHeaderJSON]

my $proj="$[/myProject/projectName]";

#
# Create callee
#
my($ok,$json)=InvokeCOmmander(\'getProcedure\', "RP_Proc1);
if (! $ok) {
  $ec->createProcedure($proj, "RP_Proc1");
  $ec->createFormalParameter($proj, "RP_Proc1", "param1", {description=>"Test param1"});
}

#
# Create Caller
#
$ec->createProcedure($proj, "RP_Test2");
$ec->createStep($proj, "RP_Test2", "step2_1",
			{
              actualParameter=>[{actualParameterName => \'param1\', value => \'main\'}],
              subprocedure=>"RP_Proc1"
            }
         );

$[/projects/EC-Admin/scripts/perlLibJSON]
'''
      shell = 'ec-perl'
    }

    step 'callTest', {
      subprocedure = 'removeParameterFromCall'
      subproject = '/plugins/EC-Admin/project'
      actualParameter 'debug', 'true'
      actualParameter 'delete', 'true'
      actualParameter 'parameter_Name', 'param1'
      actualParameter 'procedure_Name', 'RP_Proc1'
      actualParameter 'project_Name', 'EC-Admin Test'
    }

    step 'Clean', {
      command = '''$[/projects/EC-Admin/scripts/perlHeaderJSON]

my $proj="$[/myProject/projectName]";

$ec->deleteProcedure($proj, "RP_Proc1");
$ec->deleteProcedure($proj, "RP_Proc2");
'''
      shell = 'ec-perl'
    }
  }

  tag 'ec-admin'

  // Custom properties

  property 'PS', {
    description = ''

    // Custom properties

    property 'cleanup', {

      // Custom properties

      property 'config', {

        // Custom properties

        property 'timeout', value: '600', {
          description = ''
          expandable = '1'
          suppressValueTracking = '0'
        }
      }
    }

    property 'licenseLogger', {

      // Custom properties

      property 'config', {

        // Custom properties
        cleanpOldJobs = '1'

        property 'emailConfig', value: 'default', {
          expandable = '1'
          suppressValueTracking = '0'
        }
        emailTo = 'admin'

        property 'resource', value: 'local', {
          expandable = '1'
          suppressValueTracking = '0'
        }

        property 'workspace', value: 'default', {
          expandable = '1'
          suppressValueTracking = '0'
        }
      }
    }
  }
  token1 = '1'
  token2 = '-1'
  token3 = ''
}

2019-03-01T16:27:42.566 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "project": {
        "projectId": "a2d9eb9e-3c33-11e9-b2a8-0a03fa837144",
        "projectName": "EC-Admin_Test",
        "createTime": "2019-03-01T15:06:48.055Z",
        "description": "procedure testing",
        "lastModifiedBy": "admin",
        "modifyTime": "2019-03-01T15:06:48.055Z",
        "owner": "admin",
        "processCount": "0",
        "propertySheetId": "a2d9eba0-3c33-11e9-b2a8-0a03fa837144",
        "stageCount": "0",
        "tracked": "1"
    }
}
2019-03-01T16:27:42.567 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: pingResource(resourceName: 'ecadmin-lin')
2019-03-01T16:27:45.411 | DEBUG | c.e.spec.SpockTestSupport | Commander server url: https://ps9.ecloud-kdemo.com:8443
2019-03-01T16:27:46.550 | DEBUG | c.e.spec.SpockTestSupport | login using admin
2019-03-01T16:29:00.489 | DEBUG | c.e.spec.SpockTestSupport | Commander server url: https://ps9.ecloud-kdemo.com:8443
2019-03-01T16:29:02.765 | DEBUG | c.e.spec.SpockTestSupport | login using admin
2019-03-01T16:29:03.619 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: resource 'ecadmin-lin', hostName: 'localhost' 
2019-03-01T16:29:04.298 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "resource": {
        "resourceId": "299bd696-3c36-11e9-85e2-0a03fa837144",
        "resourceName": "ecadmin-lin",
        "agentState": {
            "alive": "1",
            "details": "The agent is alive",
            "hostOS": "Linux edwardjones 4.4.0-1075-aws #85-Ubuntu SMP Thu Jan 17 17:15:12 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux",
            "hostPlatform": "linux",
            "message": "The agent is alive",
            "pingToken": "1551275940",
            "protocolVersion": "6",
            "state": "alive",
            "time": "2018-05-29T20:37:19.550Z",
            "version": "9.0.0.135442"
        },
        "createTime": "2019-03-01T15:24:53.525Z",
        "createTimeFormatted": "2019-03-01 15:24:53 UTC",
        "hostName": "localhost",
        "hostOS": "Linux edwardjones 4.4.0-1075-aws #85-Ubuntu SMP Thu Jan 17 17:15:12 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux",
        "hostPlatform": "linux",
        "hostType": "CONCURRENT",
        "lastModifiedBy": "admin",
        "lastRunTimeFormatted": "",
        "modifyTime": "2019-03-01T15:27:38.426Z",
        "owner": "admin",
        "port": "",
        "propertySheetId": "299bd698-3c36-11e9-85e2-0a03fa837144",
        "proxyPort": "",
        "resourceAgentState": "alive",
        "resourceAgentVersion": "9.0.0.135442",
        "resourceDisabled": "0",
        "runningTime": "0h 4min",
        "stepLimit": "",
        "trusted": "0",
        "useSSL": "1",
        "zoneName": "default"
    }
}
2019-03-01T16:29:04.330 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: 
project 'EC-Admin_Test', {
  description = 'procedure testing'

  procedure 'artifactRepoSyncTesting', {
    description = 'Do not delete. Called by ec-spec-tools'

    formalParameter 'repoRes', defaultValue: 'win8', {
      description = 'The resource of the repo to test'
      required = '1'
      type = 'entry'
    }

    step 'delete', {
      command = '''$[/plugins[EC-Admin]project/scripts/perlHeaderJSON]

use File::Path;

my $dir=$ENV{\'COMMANDER_DATA\'};

if (! $dir) {
  printf("Error: COMMANDER_DATA undefined: $dir\\n");
  exit(1);
}
printf("Delete $dir/repository-data");
rmtree ("$dir/repository-data");
'''
      errorHandling = 'failProcedure'
      resourceName = '$[repoRes]'
      shell = 'ec-perl'
     }

    step 'sync', {
      errorHandling = 'failProcedure'
      subprocedure = 'artifactRepositorySynchronization'
      subproject = '/plugins/EC-Admin/project'
      actualParameter 'artifactRepositoryList', 'default'
      actualParameter 'artifactRepositoryResource', '$[repoRes]'
      actualParameter 'artifactVersionPattern', 'AA:*'
      actualParameter 'batchSize', '25'
    }

    step 'verify', {
      command = '''$[/plugins[EC-Admin]project/scripts/perlHeaderJSON]

use File::Path;

my $dir=$ENV{\'COMMANDER_DATA\'};

if (! $dir) {
  printf("Error: COMMANDER_DATA undefined: $dir\\n");
  exit(1);
}
if (! -d "$dir/repository-data/AA/OLHp/3.3.3") {
	printf("Error: cannot find AA/OLHp/3.3.3 in $dir/repository-data");
    exit(1);
}

if (! -d "$dir/repository-data/AA/OLHp/3.3.4") {
	printf("Error: cannot find AA/OLHp/3.3.4 in $dir/repository-data");
    exit(1);
}
'''
      errorHandling = 'failProcedure'
      resourceName = '$[repoRes]'
      shell = 'ec-perl'
     }
  }

  procedure 'cleanJob-LocalWorkspace', {
    step 'echo', {
      command = '''echo "Hellow world"'''
      resourceName = 'ecadmin-win'
      workspaceName = 'ecadmin-win-wks'
    }

    step 'build', {
      errorHandling = 'failProcedure'
       subprocedure = 'Build'
      subproject = 'Training_user'
      actualParameter 'Build Label', 'gfoo'
    }
  }

  procedure 'getPS', {
    description = '''to be called by ntest to verify getP and getPS work as expected
Issue #20'''

    step 'getPSJSON', {
       command = '''$[/projects/EC-Admin/scripts/perlHeaderJSON]

my $hRef=getPS("/server/EC-Admin", 1);
print Dumper($hRef);

my $val=$hRef->{licenseLogger}->{config}->{emailTo};
$ec->setProperty("summary", $val);
exit ($val ne "$[/server/EC-Admin/licenseLogger/config/emailTo]");

$[/projects/EC-Admin/scripts/perlLibJSON]
'''
      shell = 'ec-perl'
    }

    step 'getPSXML', {
      command = '''$[/projects/EC-Admin/scripts/perlHeader]
use Data::Dumper;

my $hRef=getPS("/myProject/PS", 1);
print Dumper($hRef);

my $val=$hRef->{licenseLogger}->{config}->{emailTo};
$ec->setProperty("summary", $val);
exit ($val ne "$[/myProject/PS/licenseLogger/config/emailTo]");

$[/projects/EC-Admin/scripts/perlLib]
'''
      shell = 'ec-perl'
     }
  }

  procedure 'questionMark', {

    step 'rerun?', {
      command = 'echo "I\'m rerunning"'
    }
  }

  procedure 'RP_Test2', {

    step 'step2_1', {
      subprocedure = 'RP_Proc1'
    }
  }

  procedure 'scriptsPropertiesTest', {
    description = '''Test the code in the scripts PS to be sure they can be loaded from a different project
Called by NTEST '''

    step 'humanSize', {
      description = 'Should return 3 Mb'
      command = '''$[/plugins/[EC-Admin]/project/scripts/perlHeaderJSON]
my $res=humanSize(3*1024*1024);

printf("size=%s\\n",$res);
$ec->setProperty("result", $res);

$[/plugins/[EC-Admin]/project/scripts/perlCommonLib]'''
      resourceName = 'ecadmin-lin'
      shell = 'ec-perl'
    }
  }

  procedure 'semaphoreTest', {
    jobNameTemplate = '$[/server/jobTemplate]'

    formalParameter 'token', defaultValue: '1', {
      required = '1'
      simpleList = '1|2|3'
      type = 'radio'
    }

    step 'acqToken', {
      subprocedure = 'acquireSemaphore'
      subproject = '/plugins/EC-Admin/project'
      actualParameter 'maxSemaphoreValue', '1'
      actualParameter 'semaphoreProperty', '/projects/EC-Admin Test/token$[token]'
      actualParameter 'serializationResource', 'Serializer'
    }

    step 'sleep', {
      command = 'sleep 10'
    }

    step 'relToken', {
      subprocedure = 'releaseSemaphore'
      subproject = '/plugins/EC-Admin/project'
      actualParameter 'semaphoreProperty', '/projects/EC-Admin Test/token$[token]'
      actualParameter 'serializationResource', 'Serializer'
    }

    // Custom properties

    property 'ec_customEditorData', {

      // Custom properties

      property 'parameters', {

        // Custom properties

        property 'token', {

          // Custom properties

          property 'options', {

            // Custom properties
            list = '1|2|3'

            property 'type', value: 'simpleList', {
              expandable = '1'
              suppressValueTracking = '0'
            }
          }
          formType = 'standard'
        }
      }
    }
  }

  procedure 'TestRemoveParameter', {

    step 'CreateProcedure', {
      command = '''$[/projects/EC-Admin/scripts/perlHeaderJSON]

my $proj="$[/myProject/projectName]";

#
# Create callee
#
my($ok,$json)=InvokeCOmmander(\'getProcedure\', "RP_Proc1);
if (! $ok) {
  $ec->createProcedure($proj, "RP_Proc1");
  $ec->createFormalParameter($proj, "RP_Proc1", "param1", {description=>"Test param1"});
}

#
# Create Caller
#
$ec->createProcedure($proj, "RP_Test2");
$ec->createStep($proj, "RP_Test2", "step2_1",
			{
              actualParameter=>[{actualParameterName => \'param1\', value => \'main\'}],
              subprocedure=>"RP_Proc1"
            }
         );

$[/projects/EC-Admin/scripts/perlLibJSON]
'''
      shell = 'ec-perl'
    }

    step 'callTest', {
      subprocedure = 'removeParameterFromCall'
      subproject = '/plugins/EC-Admin/project'
      actualParameter 'debug', 'true'
      actualParameter 'delete', 'true'
      actualParameter 'parameter_Name', 'param1'
      actualParameter 'procedure_Name', 'RP_Proc1'
      actualParameter 'project_Name', 'EC-Admin Test'
    }

    step 'Clean', {
      command = '''$[/projects/EC-Admin/scripts/perlHeaderJSON]

my $proj="$[/myProject/projectName]";

$ec->deleteProcedure($proj, "RP_Proc1");
$ec->deleteProcedure($proj, "RP_Proc2");
'''
      shell = 'ec-perl'
    }
  }

  tag 'ec-admin'

  // Custom properties

  property 'PS', {
    description = ''

    // Custom properties

    property 'cleanup', {

      // Custom properties

      property 'config', {

        // Custom properties

        property 'timeout', value: '600', {
          description = ''
          expandable = '1'
          suppressValueTracking = '0'
        }
      }
    }

    property 'licenseLogger', {

      // Custom properties

      property 'config', {

        // Custom properties
        cleanpOldJobs = '1'

        property 'emailConfig', value: 'default', {
          expandable = '1'
          suppressValueTracking = '0'
        }
        emailTo = 'admin'

        property 'resource', value: 'local', {
          expandable = '1'
          suppressValueTracking = '0'
        }

        property 'workspace', value: 'default', {
          expandable = '1'
          suppressValueTracking = '0'
        }
      }
    }
  }
  token1 = '1'
  token2 = '-1'
  token3 = ''
}

2019-03-01T16:29:08.176 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "project": {
        "projectId": "a2d9eb9e-3c33-11e9-b2a8-0a03fa837144",
        "projectName": "EC-Admin_Test",
        "createTime": "2019-03-01T15:06:48.055Z",
        "description": "procedure testing",
        "lastModifiedBy": "admin",
        "modifyTime": "2019-03-01T15:06:48.055Z",
        "owner": "admin",
        "processCount": "0",
        "propertySheetId": "a2d9eba0-3c33-11e9-b2a8-0a03fa837144",
        "stageCount": "0",
        "tracked": "1"
    }
}
2019-03-01T16:29:08.222 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: promotePlugin(pluginName: "EC-Admin")
2019-03-01T16:29:08.855 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "plugin": {
        "pluginId": "6a43c592-b2f8-11e8-addf-0a03fa837144",
        "pluginName": "EC-Admin-3.1.6.709",
        "author": "L. Rochette",
        "createTime": "2018-09-07T23:47:43.667Z",
        "description": "A set of administrative tasks to help manage your server.",
        "label": "EC-Admin",
        "lastModifiedBy": "admin",
        "modifyTime": "2018-09-07T23:51:26.644Z",
        "owner": "admin",
        "pluginKey": "EC-Admin",
        "pluginVersion": "3.1.6.709",
        "pluginWizardBased": "1",
        "projectName": "EC-Admin-3.1.6.709",
        "promoted": "1",
        "propertySheetId": "6a43c594-b2f8-11e8-addf-0a03fa837144",
        "supportsConfigurations": "0"
    }
}
2019-03-01T16:29:08.856 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getProperty("/plugins/EC-Admin/pluginVersion")
2019-03-01T16:29:09.483 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyName": "pluginVersion",
        "createTime": "2018-09-07T23:47:43.667Z",
        "description": "'pluginVersion' is a built-in property on plugin 'EC-Admin-3.1.6.709'",
        "expandable": "1",
        "modifyTime": "2018-09-07T23:51:26.644Z",
        "pathRelativeToOwner": "pluginVersion",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "3.1.6.709"
    }
}
2019-03-01T16:29:09.484 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getProperty("/plugins/EC-Admin/project/ec_visibility")
2019-03-01T16:29:10.107 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyId": "6b385edc-b2f8-11e8-9035-0a03fa837144",
        "propertyName": "ec_visibility",
        "createTime": "2018-09-07T23:47:44.670Z",
        "expandable": "1",
        "lastModifiedBy": "admin",
        "modifyTime": "2018-09-07T23:47:44.670Z",
        "owner": "admin",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "pickListOnly"
    }
}
2019-03-01T16:29:10.140 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: 
      setProperty(
        propertyName: "/plugins/EC-Admin/project/ec_debug_logToProperty",
        value: "/myJob/debug_logs"
      )
    
2019-03-01T16:29:10.767 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyId": "82ed8a3b-3c26-11e9-989d-0a03fa837144",
        "propertyName": "ec_debug_logToProperty",
        "createTime": "2019-03-01T13:32:51.428Z",
        "expandable": "1",
        "lastModifiedBy": "admin",
        "modifyTime": "2019-03-01T13:32:51.428Z",
        "owner": "admin",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "/myJob/debug_logs"
    }
}
2019-03-01T16:29:10.769 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: runProcedure(projectName: "EC-Admin_Test", procedureName: "scriptsPropertiesTest") 
2019-03-01T16:29:11.444 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "jobId": "c33cc0f1-3c36-11e9-8386-0a03fa837144"
}
2019-03-01T16:29:11.451 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: waitForCompletion jobId:'c33cc0f1-3c36-11e9-8386-0a03fa837144'
2019-03-01T16:29:12.126 | DEBUG | c.e.spec.SpockTestSupport | Response {
    
}
2019-03-01T16:29:12.131 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getProperty(propertyName: '/myJob/debug_logs', jobId: 'c33cc0f1-3c36-11e9-8386-0a03fa837144')
2019-03-01T16:29:13.216 | DEBUG | c.e.spec.SpockTestSupport | Response {
    
}
2019-03-01T16:29:13.220 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getJobStatus jobId: 'c33cc0f1-3c36-11e9-8386-0a03fa837144'
2019-03-01T16:29:13.831 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "jobId": "c33cc0f1-3c36-11e9-8386-0a03fa837144",
    "outcome": "success",
    "status": "completed"
}
2019-03-01T16:29:13.832 | DEBUG | c.e.spec.SpockTestSupport | DSL: runProcedure(projectName: "EC-Admin_Test", procedureName: "scriptsPropertiesTest") 
2019-03-01T16:29:13.832 | DEBUG | c.e.spec.SpockTestSupport | Logs: Possible exception in logs; check job
2019-03-01T16:29:13.832 | DEBUG | c.e.spec.SpockTestSupport | Outcome: success
2019-03-01T16:29:13.833 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getProperty(propertyName: '/myJob/jobSteps/humanSize/result', jobId: 'c33cc0f1-3c36-11e9-8386-0a03fa837144')
2019-03-01T16:29:14.452 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyId": "c3699e28-3c36-11e9-85e2-0a03fa837144",
        "propertyName": "result",
        "createTime": "2019-03-01T15:29:11.585Z",
        "expandable": "1",
        "lastModifiedBy": "project: EC-Admin_Test",
        "modifyTime": "2019-03-01T15:29:11.585Z",
        "owner": "project: EC-Admin_Test",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "3.00 MB"
    }
}
2019-03-01T16:29:14.455 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getProperty(propertyName: '/myJob/jobSteps/humanSize/exitCode', jobId: 'c33cc0f1-3c36-11e9-8386-0a03fa837144')
2019-03-01T16:29:15.069 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyName": "exitCode",
        "createTime": "2019-03-01T15:29:11.320Z",
        "description": "'exitCode' is a built-in property on jobStep 'humanSize'",
        "expandable": "1",
        "modifyTime": "2019-03-01T15:29:11.627Z",
        "pathRelativeToOwner": "exitCode",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "0"
    }
}
2019-03-01T16:29:16.035 | DEBUG | c.e.spec.SpockTestSupport | Commander server url: https://ps9.ecloud-kdemo.com:8443
2019-03-01T16:29:17.086 | DEBUG | c.e.spec.SpockTestSupport | login using admin
2019-03-01T16:29:57.645 | DEBUG | c.e.spec.SpockTestSupport | Commander server url: https://ps9.ecloud-kdemo.com:8443
2019-03-01T16:29:59.777 | DEBUG | c.e.spec.SpockTestSupport | login using admin
2019-03-01T16:30:00.670 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: resource 'ecadmin-lin', hostName: 'localhost' 
2019-03-01T16:30:01.366 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "resource": {
        "resourceId": "299bd696-3c36-11e9-85e2-0a03fa837144",
        "resourceName": "ecadmin-lin",
        "agentState": {
            "alive": "1",
            "details": "The agent is alive",
            "hostOS": "Linux edwardjones 4.4.0-1075-aws #85-Ubuntu SMP Thu Jan 17 17:15:12 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux",
            "hostPlatform": "linux",
            "message": "The agent is alive",
            "pingToken": "1551275940",
            "protocolVersion": "6",
            "state": "alive",
            "time": "2018-05-29T20:37:19.550Z",
            "version": "9.0.0.135442"
        },
        "createTime": "2019-03-01T15:24:53.525Z",
        "createTimeFormatted": "2019-03-01 15:24:53 UTC",
        "hostName": "localhost",
        "hostOS": "Linux edwardjones 4.4.0-1075-aws #85-Ubuntu SMP Thu Jan 17 17:15:12 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux",
        "hostPlatform": "linux",
        "hostType": "CONCURRENT",
        "lastJobId": "c33cc0f1-3c36-11e9-8386-0a03fa837144",
        "lastJobName": "EC-Admin_Test::scriptsPropertiesTest::69828_2019-03-01 15:29:11",
        "lastJobStepId": "c341f12f-3c36-11e9-9c30-0a03fa837144",
        "lastModifiedBy": "project: EC-Admin_Test",
        "lastRunTime": "2019-03-01T15:29:11.372Z",
        "lastRunTimeFormatted": "2019-03-01 15:29:11 UTC",
        "modifyTime": "2019-03-01T15:29:11.372Z",
        "owner": "admin",
        "port": "",
        "propertySheetId": "299bd698-3c36-11e9-85e2-0a03fa837144",
        "proxyPort": "",
        "resourceAgentState": "alive",
        "resourceAgentVersion": "9.0.0.135442",
        "resourceDisabled": "0",
        "runningTime": "0h 5min",
        "stepLimit": "",
        "trusted": "0",
        "useSSL": "1",
        "zoneName": "default"
    }
}
2019-03-01T16:30:01.397 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: 
project 'EC-Admin_Test', {
  description = 'procedure testing'

  procedure 'artifactRepoSyncTesting', {
    description = 'Do not delete. Called by ec-spec-tools'

    formalParameter 'repoRes', defaultValue: 'win8', {
      description = 'The resource of the repo to test'
      required = '1'
      type = 'entry'
    }

    step 'delete', {
      command = '''$[/plugins[EC-Admin]project/scripts/perlHeaderJSON]

use File::Path;

my $dir=$ENV{\'COMMANDER_DATA\'};

if (! $dir) {
  printf("Error: COMMANDER_DATA undefined: $dir\\n");
  exit(1);
}
printf("Delete $dir/repository-data");
rmtree ("$dir/repository-data");
'''
      errorHandling = 'failProcedure'
      resourceName = '$[repoRes]'
      shell = 'ec-perl'
     }

    step 'sync', {
      errorHandling = 'failProcedure'
      subprocedure = 'artifactRepositorySynchronization'
      subproject = '/plugins/EC-Admin/project'
      actualParameter 'artifactRepositoryList', 'default'
      actualParameter 'artifactRepositoryResource', '$[repoRes]'
      actualParameter 'artifactVersionPattern', 'AA:*'
      actualParameter 'batchSize', '25'
    }

    step 'verify', {
      command = '''$[/plugins[EC-Admin]project/scripts/perlHeaderJSON]

use File::Path;

my $dir=$ENV{\'COMMANDER_DATA\'};

if (! $dir) {
  printf("Error: COMMANDER_DATA undefined: $dir\\n");
  exit(1);
}
if (! -d "$dir/repository-data/AA/OLHp/3.3.3") {
	printf("Error: cannot find AA/OLHp/3.3.3 in $dir/repository-data");
    exit(1);
}

if (! -d "$dir/repository-data/AA/OLHp/3.3.4") {
	printf("Error: cannot find AA/OLHp/3.3.4 in $dir/repository-data");
    exit(1);
}
'''
      errorHandling = 'failProcedure'
      resourceName = '$[repoRes]'
      shell = 'ec-perl'
     }
  }

  procedure 'cleanJob-LocalWorkspace', {
    step 'echo', {
      command = '''echo "Hellow world"'''
      resourceName = 'ecadmin-win'
      workspaceName = 'ecadmin-win-wks'
    }

    step 'build', {
      errorHandling = 'failProcedure'
       subprocedure = 'Build'
      subproject = 'Training_user'
      actualParameter 'Build Label', 'gfoo'
    }
  }

  procedure 'getPS', {
    description = '''to be called by ntest to verify getP and getPS work as expected
Issue #20'''

    step 'getPSJSON', {
       command = '''$[/projects/EC-Admin/scripts/perlHeaderJSON]

my $hRef=getPS("/server/EC-Admin", 1);
print Dumper($hRef);

my $val=$hRef->{licenseLogger}->{config}->{emailTo};
$ec->setProperty("summary", $val);
exit ($val ne "$[/server/EC-Admin/licenseLogger/config/emailTo]");

$[/projects/EC-Admin/scripts/perlLibJSON]
'''
      shell = 'ec-perl'
    }

    step 'getPSXML', {
      command = '''$[/projects/EC-Admin/scripts/perlHeader]
use Data::Dumper;

my $hRef=getPS("/myProject/PS", 1);
print Dumper($hRef);

my $val=$hRef->{licenseLogger}->{config}->{emailTo};
$ec->setProperty("summary", $val);
exit ($val ne "$[/myProject/PS/licenseLogger/config/emailTo]");

$[/projects/EC-Admin/scripts/perlLib]
'''
      shell = 'ec-perl'
     }
  }

  procedure 'questionMark', {

    step 'rerun?', {
      command = 'echo "I\'m rerunning"'
    }
  }

  procedure 'RP_Test2', {

    step 'step2_1', {
      subprocedure = 'RP_Proc1'
    }
  }

  procedure 'scriptsPropertiesTest', {
    description = '''Test the code in the scripts PS to be sure they can be loaded from a different project
Called by NTEST '''

    step 'humanSize', {
      description = 'Should return 3 Mb'
      command = '''$[/plugins/[EC-Admin]/project/scripts/perlHeaderJSON]
my $res=humanSize(3*1024*1024);

printf("size=%s\\n",$res);
$ec->setProperty("result", $res);

$[/plugins/[EC-Admin]/project/scripts/perlCommonLib]'''
      resourceName = 'ecadmin-lin'
      shell = 'ec-perl'
    }
  }

  procedure 'semaphoreTest', {
    jobNameTemplate = '$[/server/jobTemplate]'

    formalParameter 'token', defaultValue: '1', {
      required = '1'
      simpleList = '1|2|3'
      type = 'radio'
    }

    step 'acqToken', {
      subprocedure = 'acquireSemaphore'
      subproject = '/plugins/EC-Admin/project'
      actualParameter 'maxSemaphoreValue', '1'
      actualParameter 'semaphoreProperty', '/projects/EC-Admin Test/token$[token]'
      actualParameter 'serializationResource', 'Serializer'
    }

    step 'sleep', {
      command = 'sleep 10'
    }

    step 'relToken', {
      subprocedure = 'releaseSemaphore'
      subproject = '/plugins/EC-Admin/project'
      actualParameter 'semaphoreProperty', '/projects/EC-Admin Test/token$[token]'
      actualParameter 'serializationResource', 'Serializer'
    }

    // Custom properties

    property 'ec_customEditorData', {

      // Custom properties

      property 'parameters', {

        // Custom properties

        property 'token', {

          // Custom properties

          property 'options', {

            // Custom properties
            list = '1|2|3'

            property 'type', value: 'simpleList', {
              expandable = '1'
              suppressValueTracking = '0'
            }
          }
          formType = 'standard'
        }
      }
    }
  }

  procedure 'TestRemoveParameter', {

    step 'CreateProcedure', {
      command = '''$[/projects/EC-Admin/scripts/perlHeaderJSON]

my $proj="$[/myProject/projectName]";

#
# Create callee
#
my($ok,$json)=InvokeCOmmander(\'getProcedure\', "RP_Proc1);
if (! $ok) {
  $ec->createProcedure($proj, "RP_Proc1");
  $ec->createFormalParameter($proj, "RP_Proc1", "param1", {description=>"Test param1"});
}

#
# Create Caller
#
$ec->createProcedure($proj, "RP_Test2");
$ec->createStep($proj, "RP_Test2", "step2_1",
			{
              actualParameter=>[{actualParameterName => \'param1\', value => \'main\'}],
              subprocedure=>"RP_Proc1"
            }
         );

$[/projects/EC-Admin/scripts/perlLibJSON]
'''
      shell = 'ec-perl'
    }

    step 'callTest', {
      subprocedure = 'removeParameterFromCall'
      subproject = '/plugins/EC-Admin/project'
      actualParameter 'debug', 'true'
      actualParameter 'delete', 'true'
      actualParameter 'parameter_Name', 'param1'
      actualParameter 'procedure_Name', 'RP_Proc1'
      actualParameter 'project_Name', 'EC-Admin Test'
    }

    step 'Clean', {
      command = '''$[/projects/EC-Admin/scripts/perlHeaderJSON]

my $proj="$[/myProject/projectName]";

$ec->deleteProcedure($proj, "RP_Proc1");
$ec->deleteProcedure($proj, "RP_Proc2");
'''
      shell = 'ec-perl'
    }
  }

  tag 'ec-admin'

  // Custom properties

  property 'PS', {
    description = ''

    // Custom properties

    property 'cleanup', {

      // Custom properties

      property 'config', {

        // Custom properties

        property 'timeout', value: '600', {
          description = ''
          expandable = '1'
          suppressValueTracking = '0'
        }
      }
    }

    property 'licenseLogger', {

      // Custom properties

      property 'config', {

        // Custom properties
        cleanpOldJobs = '1'

        property 'emailConfig', value: 'default', {
          expandable = '1'
          suppressValueTracking = '0'
        }
        emailTo = 'admin'

        property 'resource', value: 'local', {
          expandable = '1'
          suppressValueTracking = '0'
        }

        property 'workspace', value: 'default', {
          expandable = '1'
          suppressValueTracking = '0'
        }
      }
    }
  }
  token1 = '1'
  token2 = '-1'
  token3 = ''
}

2019-03-01T16:30:05.212 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "project": {
        "projectId": "a2d9eb9e-3c33-11e9-b2a8-0a03fa837144",
        "projectName": "EC-Admin_Test",
        "createTime": "2019-03-01T15:06:48.055Z",
        "description": "procedure testing",
        "lastModifiedBy": "admin",
        "modifyTime": "2019-03-01T15:06:48.055Z",
        "owner": "admin",
        "processCount": "0",
        "propertySheetId": "a2d9eba0-3c33-11e9-b2a8-0a03fa837144",
        "stageCount": "0",
        "tracked": "1"
    }
}
2019-03-01T16:30:05.243 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: promotePlugin(pluginName: "EC-Admin")
2019-03-01T16:30:05.871 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "plugin": {
        "pluginId": "6a43c592-b2f8-11e8-addf-0a03fa837144",
        "pluginName": "EC-Admin-3.1.6.709",
        "author": "L. Rochette",
        "createTime": "2018-09-07T23:47:43.667Z",
        "description": "A set of administrative tasks to help manage your server.",
        "label": "EC-Admin",
        "lastModifiedBy": "admin",
        "modifyTime": "2018-09-07T23:51:26.644Z",
        "owner": "admin",
        "pluginKey": "EC-Admin",
        "pluginVersion": "3.1.6.709",
        "pluginWizardBased": "1",
        "projectName": "EC-Admin-3.1.6.709",
        "promoted": "1",
        "propertySheetId": "6a43c594-b2f8-11e8-addf-0a03fa837144",
        "supportsConfigurations": "0"
    }
}
2019-03-01T16:30:05.883 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getProperty("/plugins/EC-Admin/pluginVersion")
2019-03-01T16:30:06.505 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyName": "pluginVersion",
        "createTime": "2018-09-07T23:47:43.667Z",
        "description": "'pluginVersion' is a built-in property on plugin 'EC-Admin-3.1.6.709'",
        "expandable": "1",
        "modifyTime": "2018-09-07T23:51:26.644Z",
        "pathRelativeToOwner": "pluginVersion",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "3.1.6.709"
    }
}
2019-03-01T16:30:06.506 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getProperty("/plugins/EC-Admin/project/ec_visibility")
2019-03-01T16:30:07.127 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyId": "6b385edc-b2f8-11e8-9035-0a03fa837144",
        "propertyName": "ec_visibility",
        "createTime": "2018-09-07T23:47:44.670Z",
        "expandable": "1",
        "lastModifiedBy": "admin",
        "modifyTime": "2018-09-07T23:47:44.670Z",
        "owner": "admin",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "pickListOnly"
    }
}
2019-03-01T16:30:07.155 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: 
      setProperty(
        propertyName: "/plugins/EC-Admin/project/ec_debug_logToProperty",
        value: "/myJob/debug_logs"
      )
    
2019-03-01T16:30:07.775 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyId": "82ed8a3b-3c26-11e9-989d-0a03fa837144",
        "propertyName": "ec_debug_logToProperty",
        "createTime": "2019-03-01T13:32:51.428Z",
        "expandable": "1",
        "lastModifiedBy": "admin",
        "modifyTime": "2019-03-01T13:32:51.428Z",
        "owner": "admin",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "/myJob/debug_logs"
    }
}
2019-03-01T16:30:07.776 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: runProcedure(projectName: "EC-Admin_Test", procedureName: "scriptsPropertiesTest") 
2019-03-01T16:30:08.441 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "jobId": "e538dbb3-3c36-11e9-81aa-0a03fa837144"
}
2019-03-01T16:30:08.446 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: waitForCompletion jobId:'e538dbb3-3c36-11e9-81aa-0a03fa837144'
2019-03-01T16:30:09.521 | DEBUG | c.e.spec.SpockTestSupport | Response {
    
}
2019-03-01T16:30:09.523 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getProperty(propertyName: '/myJob/debug_logs', jobId: 'e538dbb3-3c36-11e9-81aa-0a03fa837144')
2019-03-01T16:30:10.230 | DEBUG | c.e.spec.SpockTestSupport | Response {
    
}
2019-03-01T16:30:10.234 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getJobStatus jobId: 'e538dbb3-3c36-11e9-81aa-0a03fa837144'
2019-03-01T16:30:10.850 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "jobId": "e538dbb3-3c36-11e9-81aa-0a03fa837144",
    "outcome": "success",
    "status": "completed"
}
2019-03-01T16:30:10.851 | DEBUG | c.e.spec.SpockTestSupport | DSL: runProcedure(projectName: "EC-Admin_Test", procedureName: "scriptsPropertiesTest") 
2019-03-01T16:30:10.851 | DEBUG | c.e.spec.SpockTestSupport | Logs: Possible exception in logs; check job
2019-03-01T16:30:10.851 | DEBUG | c.e.spec.SpockTestSupport | Outcome: success
2019-03-01T16:30:10.851 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getProperty(propertyName: '/myJob/jobSteps/humanSize/result', jobId: 'e538dbb3-3c36-11e9-81aa-0a03fa837144')
2019-03-01T16:30:11.464 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyId": "e5656aa8-3c36-11e9-85e2-0a03fa837144",
        "propertyName": "result",
        "createTime": "2019-03-01T15:30:08.600Z",
        "expandable": "1",
        "lastModifiedBy": "project: EC-Admin_Test",
        "modifyTime": "2019-03-01T15:30:08.600Z",
        "owner": "project: EC-Admin_Test",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "3.00 MB"
    }
}
2019-03-01T16:30:11.466 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getProperty(propertyName: '/myJob/jobSteps/humanSize/exitCode', jobId: 'e538dbb3-3c36-11e9-81aa-0a03fa837144')
2019-03-01T16:30:12.081 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyName": "exitCode",
        "createTime": "2019-03-01T15:30:08.337Z",
        "description": "'exitCode' is a built-in property on jobStep 'humanSize'",
        "expandable": "1",
        "modifyTime": "2019-03-01T15:30:08.644Z",
        "pathRelativeToOwner": "exitCode",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "0"
    }
}
2019-03-01T16:30:12.956 | DEBUG | c.e.spec.SpockTestSupport | Commander server url: https://ps9.ecloud-kdemo.com:8443
2019-03-01T16:30:13.975 | DEBUG | c.e.spec.SpockTestSupport | login using admin
2019-03-01T16:32:35.649 | DEBUG | c.e.spec.SpockTestSupport | Commander server url: https://ps9.ecloud-kdemo.com:8443
2019-03-01T16:32:37.880 | DEBUG | c.e.spec.SpockTestSupport | login using admin
2019-03-01T16:32:38.739 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: resource 'ecadmin-lin', hostName: 'localhost' 
2019-03-01T16:32:39.419 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "resource": {
        "resourceId": "299bd696-3c36-11e9-85e2-0a03fa837144",
        "resourceName": "ecadmin-lin",
        "agentState": {
            "alive": "1",
            "details": "The agent is alive",
            "hostOS": "Linux edwardjones 4.4.0-1075-aws #85-Ubuntu SMP Thu Jan 17 17:15:12 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux",
            "hostPlatform": "linux",
            "message": "The agent is alive",
            "pingToken": "1551275940",
            "protocolVersion": "6",
            "state": "alive",
            "time": "2018-05-29T20:37:19.550Z",
            "version": "9.0.0.135442"
        },
        "createTime": "2019-03-01T15:24:53.525Z",
        "createTimeFormatted": "2019-03-01 15:24:53 UTC",
        "hostName": "localhost",
        "hostOS": "Linux edwardjones 4.4.0-1075-aws #85-Ubuntu SMP Thu Jan 17 17:15:12 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux",
        "hostPlatform": "linux",
        "hostType": "CONCURRENT",
        "lastJobId": "e538dbb3-3c36-11e9-81aa-0a03fa837144",
        "lastJobName": "EC-Admin_Test::scriptsPropertiesTest::69829_2019-03-01 15:30:08",
        "lastJobStepId": "e53e5aaf-3c36-11e9-b9f5-0a03fa837144",
        "lastModifiedBy": "project: EC-Admin_Test",
        "lastRunTime": "2019-03-01T15:30:08.390Z",
        "lastRunTimeFormatted": "2019-03-01 15:30:08 UTC",
        "modifyTime": "2019-03-01T15:30:08.390Z",
        "owner": "admin",
        "port": "",
        "propertySheetId": "299bd698-3c36-11e9-85e2-0a03fa837144",
        "proxyPort": "",
        "resourceAgentState": "alive",
        "resourceAgentVersion": "9.0.0.135442",
        "resourceDisabled": "0",
        "runningTime": "0h 7min",
        "stepLimit": "",
        "trusted": "0",
        "useSSL": "1",
        "zoneName": "default"
    }
}
2019-03-01T16:32:39.453 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: 
project 'EC-Admin_Test', {
  description = 'procedure testing'

  procedure 'artifactRepoSyncTesting', {
    description = 'Do not delete. Called by ec-spec-tools'

    formalParameter 'repoRes', defaultValue: 'win8', {
      description = 'The resource of the repo to test'
      required = '1'
      type = 'entry'
    }

    step 'delete', {
      command = '''$[/plugins[EC-Admin]project/scripts/perlHeaderJSON]

use File::Path;

my $dir=$ENV{\'COMMANDER_DATA\'};

if (! $dir) {
  printf("Error: COMMANDER_DATA undefined: $dir\\n");
  exit(1);
}
printf("Delete $dir/repository-data");
rmtree ("$dir/repository-data");
'''
      errorHandling = 'failProcedure'
      resourceName = '$[repoRes]'
      shell = 'ec-perl'
     }

    step 'sync', {
      errorHandling = 'failProcedure'
      subprocedure = 'artifactRepositorySynchronization'
      subproject = '/plugins/EC-Admin/project'
      actualParameter 'artifactRepositoryList', 'default'
      actualParameter 'artifactRepositoryResource', '$[repoRes]'
      actualParameter 'artifactVersionPattern', 'AA:*'
      actualParameter 'batchSize', '25'
    }

    step 'verify', {
      command = '''$[/plugins[EC-Admin]project/scripts/perlHeaderJSON]

use File::Path;

my $dir=$ENV{\'COMMANDER_DATA\'};

if (! $dir) {
  printf("Error: COMMANDER_DATA undefined: $dir\\n");
  exit(1);
}
if (! -d "$dir/repository-data/AA/OLHp/3.3.3") {
	printf("Error: cannot find AA/OLHp/3.3.3 in $dir/repository-data");
    exit(1);
}

if (! -d "$dir/repository-data/AA/OLHp/3.3.4") {
	printf("Error: cannot find AA/OLHp/3.3.4 in $dir/repository-data");
    exit(1);
}
'''
      errorHandling = 'failProcedure'
      resourceName = '$[repoRes]'
      shell = 'ec-perl'
     }
  }

  procedure 'cleanJob-LocalWorkspace', {
    step 'echo', {
      command = '''echo "Hellow world"'''
      resourceName = 'ecadmin-win'
      workspaceName = 'ecadmin-win-wks'
    }

    step 'build', {
      errorHandling = 'failProcedure'
       subprocedure = 'Build'
      subproject = 'Training_user'
      actualParameter 'Build Label', 'gfoo'
    }
  }

  procedure 'getPS', {
    description = '''to be called by ntest to verify getP and getPS work as expected
Issue #20'''

    step 'getPSJSON', {
       command = '''$[/plugins/EC-Admin/project/scripts/perlHeaderJSON]

my $hRef=getPS("/server/EC-Admin", 1);
print Dumper($hRef);

my $val=$hRef->{licenseLogger}->{config}->{emailTo};
$ec->setProperty("summary", $val);
exit ($val ne "$[/server/EC-Admin/licenseLogger/config/emailTo]");

$[/plugins/EC-Admin/project/scripts/perlLibJSON]
'''
      shell = 'ec-perl'
    }

    step 'getPSXML', {
      command = '''$[/plugins/EC-Admin/project/scripts/perlHeader]
use Data::Dumper;

my $hRef=getPS("/myProject/PS", 1);
print Dumper($hRef);

my $val=$hRef->{licenseLogger}->{config}->{emailTo};
$ec->setProperty("summary", $val);
exit ($val ne "$[/myProject/PS/licenseLogger/config/emailTo]");

$[/plugins/EC-Admin/project/scripts/perlLib]
'''
      shell = 'ec-perl'
     }
  }

  procedure 'questionMark', {

    step 'rerun?', {
      command = 'echo "I\'m rerunning"'
    }
  }

  procedure 'RP_Test2', {

    step 'step2_1', {
      subprocedure = 'RP_Proc1'
    }
  }

  procedure 'scriptsPropertiesTest', {
    description = '''Test the code in the scripts PS to be sure they can be loaded from a different project
Called by NTEST '''

    step 'humanSize', {
      description = 'Should return 3 Mb'
      command = '''$[/plugins/[EC-Admin]/project/scripts/perlHeaderJSON]
my $res=humanSize(3*1024*1024);

printf("size=%s\\n",$res);
$ec->setProperty("result", $res);

$[/plugins/[EC-Admin]/project/scripts/perlCommonLib]'''
      resourceName = 'ecadmin-lin'
      shell = 'ec-perl'
    }
  }

  procedure 'semaphoreTest', {
    jobNameTemplate = '$[/server/jobTemplate]'

    formalParameter 'token', defaultValue: '1', {
      required = '1'
      simpleList = '1|2|3'
      type = 'radio'
    }

    step 'acqToken', {
      subprocedure = 'acquireSemaphore'
      subproject = '/plugins/EC-Admin/project'
      actualParameter 'maxSemaphoreValue', '1'
      actualParameter 'semaphoreProperty', '/projects/EC-Admin_Test/token$[token]'
      actualParameter 'serializationResource', 'Serializer'
    }

    step 'sleep', {
      command = 'sleep 10'
    }

    step 'relToken', {
      subprocedure = 'releaseSemaphore'
      subproject = '/plugins/EC-Admin/project'
      actualParameter 'semaphoreProperty', '/projects/EC-Admin_Test/token$[token]'
      actualParameter 'serializationResource', 'Serializer'
    }

    // Custom properties

    property 'ec_customEditorData', {

      // Custom properties

      property 'parameters', {

        // Custom properties

        property 'token', {

          // Custom properties

          property 'options', {

            // Custom properties
            list = '1|2|3'

            property 'type', value: 'simpleList', {
              expandable = '1'
              suppressValueTracking = '0'
            }
          }
          formType = 'standard'
        }
      }
    }
  }

  procedure 'TestRemoveParameter', {

    step 'CreateProcedure', {
      command = '''$[/plugins/EC-Admin/project/scripts/perlHeaderJSON]

my $proj="$[/myProject/projectName]";

#
# Create callee
#
my($ok,$json)=InvokeCOmmander(\'getProcedure\', "RP_Proc1);
if (! $ok) {
  $ec->createProcedure($proj, "RP_Proc1");
  $ec->createFormalParameter($proj, "RP_Proc1", "param1", {description=>"Test param1"});
}

#
# Create Caller
#
$ec->createProcedure($proj, "RP_Test2");
$ec->createStep($proj, "RP_Test2", "step2_1",
			{
              actualParameter=>[{actualParameterName => \'param1\', value => \'main\'}],
              subprocedure=>"RP_Proc1"
            }
         );

$[/plugins/EC-Admin/project/scripts/perlLibJSON]
'''
      shell = 'ec-perl'
    }

    step 'callTest', {
      subprocedure = 'removeParameterFromCall'
      subproject = '/plugins/EC-Admin/project'
      actualParameter 'debug', 'true'
      actualParameter 'delete', 'true'
      actualParameter 'parameter_Name', 'param1'
      actualParameter 'procedure_Name', 'RP_Proc1'
      actualParameter 'project_Name', 'EC-Admin Test'
    }

    step 'Clean', {
      command = '''$[/plugins/EC-Admin/project/scripts/perlHeaderJSON]

my $proj="$[/myProject/projectName]";

$ec->deleteProcedure($proj, "RP_Proc1");
$ec->deleteProcedure($proj, "RP_Proc2");
'''
      shell = 'ec-perl'
    }
  }

  tag 'ec-admin'

  // Custom properties

  property 'PS', {
    description = ''

    // Custom properties

    property 'cleanup', {

      // Custom properties

      property 'config', {

        // Custom properties

        property 'timeout', value: '600', {
          description = ''
          expandable = '1'
          suppressValueTracking = '0'
        }
      }
    }

    property 'licenseLogger', {

      // Custom properties

      property 'config', {

        // Custom properties
        cleanpOldJobs = '1'

        property 'emailConfig', value: 'default', {
          expandable = '1'
          suppressValueTracking = '0'
        }
        emailTo = 'admin'

        property 'resource', value: 'local', {
          expandable = '1'
          suppressValueTracking = '0'
        }

        property 'workspace', value: 'default', {
          expandable = '1'
          suppressValueTracking = '0'
        }
      }
    }
  }
  token1 = '1'
  token2 = '-1'
  token3 = ''
}

2019-03-01T16:32:43.192 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "project": {
        "projectId": "a2d9eb9e-3c33-11e9-b2a8-0a03fa837144",
        "projectName": "EC-Admin_Test",
        "createTime": "2019-03-01T15:06:48.055Z",
        "description": "procedure testing",
        "lastModifiedBy": "admin",
        "modifyTime": "2019-03-01T15:06:48.055Z",
        "owner": "admin",
        "processCount": "0",
        "propertySheetId": "a2d9eba0-3c33-11e9-b2a8-0a03fa837144",
        "stageCount": "0",
        "tracked": "1"
    }
}
2019-03-01T16:32:43.224 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: promotePlugin(pluginName: "EC-Admin")
2019-03-01T16:32:43.842 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "plugin": {
        "pluginId": "6a43c592-b2f8-11e8-addf-0a03fa837144",
        "pluginName": "EC-Admin-3.1.6.709",
        "author": "L. Rochette",
        "createTime": "2018-09-07T23:47:43.667Z",
        "description": "A set of administrative tasks to help manage your server.",
        "label": "EC-Admin",
        "lastModifiedBy": "admin",
        "modifyTime": "2018-09-07T23:51:26.644Z",
        "owner": "admin",
        "pluginKey": "EC-Admin",
        "pluginVersion": "3.1.6.709",
        "pluginWizardBased": "1",
        "projectName": "EC-Admin-3.1.6.709",
        "promoted": "1",
        "propertySheetId": "6a43c594-b2f8-11e8-addf-0a03fa837144",
        "supportsConfigurations": "0"
    }
}
2019-03-01T16:32:43.843 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getProperty("/plugins/EC-Admin/pluginVersion")
2019-03-01T16:32:44.465 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyName": "pluginVersion",
        "createTime": "2018-09-07T23:47:43.667Z",
        "description": "'pluginVersion' is a built-in property on plugin 'EC-Admin-3.1.6.709'",
        "expandable": "1",
        "modifyTime": "2018-09-07T23:51:26.644Z",
        "pathRelativeToOwner": "pluginVersion",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "3.1.6.709"
    }
}
2019-03-01T16:32:44.466 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getProperty("/plugins/EC-Admin/project/ec_visibility")
2019-03-01T16:32:45.080 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyId": "6b385edc-b2f8-11e8-9035-0a03fa837144",
        "propertyName": "ec_visibility",
        "createTime": "2018-09-07T23:47:44.670Z",
        "expandable": "1",
        "lastModifiedBy": "admin",
        "modifyTime": "2018-09-07T23:47:44.670Z",
        "owner": "admin",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "pickListOnly"
    }
}
2019-03-01T16:32:45.107 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: 
      setProperty(
        propertyName: "/plugins/EC-Admin/project/ec_debug_logToProperty",
        value: "/myJob/debug_logs"
      )
    
2019-03-01T16:32:45.727 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyId": "82ed8a3b-3c26-11e9-989d-0a03fa837144",
        "propertyName": "ec_debug_logToProperty",
        "createTime": "2019-03-01T13:32:51.428Z",
        "expandable": "1",
        "lastModifiedBy": "admin",
        "modifyTime": "2019-03-01T13:32:51.428Z",
        "owner": "admin",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "/myJob/debug_logs"
    }
}
2019-03-01T16:32:45.728 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: runProcedure(projectName: "EC-Admin_Test", procedureName: "scriptsPropertiesTest") 
2019-03-01T16:32:47.458 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "jobId": "4400ed4a-3c37-11e9-a730-0a03fa837144"
}
2019-03-01T16:32:47.467 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: waitForCompletion jobId:'4400ed4a-3c37-11e9-a730-0a03fa837144'
2019-03-01T16:32:48.745 | DEBUG | c.e.spec.SpockTestSupport | Response {
    
}
2019-03-01T16:32:48.748 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getProperty(propertyName: '/myJob/debug_logs', jobId: '4400ed4a-3c37-11e9-a730-0a03fa837144')
2019-03-01T16:32:49.369 | DEBUG | c.e.spec.SpockTestSupport | Response {
    
}
2019-03-01T16:32:49.377 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getJobStatus jobId: '4400ed4a-3c37-11e9-a730-0a03fa837144'
2019-03-01T16:32:49.991 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "jobId": "4400ed4a-3c37-11e9-a730-0a03fa837144",
    "outcome": "success",
    "status": "completed"
}
2019-03-01T16:32:49.992 | DEBUG | c.e.spec.SpockTestSupport | DSL: runProcedure(projectName: "EC-Admin_Test", procedureName: "scriptsPropertiesTest") 
2019-03-01T16:32:49.993 | DEBUG | c.e.spec.SpockTestSupport | Logs: Possible exception in logs; check job
2019-03-01T16:32:49.993 | DEBUG | c.e.spec.SpockTestSupport | Outcome: success
2019-03-01T16:32:49.994 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getProperty(propertyName: '/myJob/jobSteps/humanSize/result', jobId: '4400ed4a-3c37-11e9-a730-0a03fa837144')
2019-03-01T16:32:50.604 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyId": "442cdf55-3c37-11e9-81aa-0a03fa837144",
        "propertyName": "result",
        "createTime": "2019-03-01T15:32:47.613Z",
        "expandable": "1",
        "lastModifiedBy": "project: EC-Admin_Test",
        "modifyTime": "2019-03-01T15:32:47.613Z",
        "owner": "project: EC-Admin_Test",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "3.00 MB"
    }
}
2019-03-01T16:32:50.607 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getProperty(propertyName: '/myJob/jobSteps/humanSize/exitCode', jobId: '4400ed4a-3c37-11e9-a730-0a03fa837144')
2019-03-01T16:32:51.222 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyName": "exitCode",
        "createTime": "2019-03-01T15:32:47.353Z",
        "description": "'exitCode' is a built-in property on jobStep 'humanSize'",
        "expandable": "1",
        "modifyTime": "2019-03-01T15:32:47.654Z",
        "pathRelativeToOwner": "exitCode",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "0"
    }
}
2019-03-01T16:32:52.321 | DEBUG | c.e.spec.SpockTestSupport | Commander server url: https://ps9.ecloud-kdemo.com:8443
2019-03-01T16:32:53.459 | DEBUG | c.e.spec.SpockTestSupport | login using admin
2019-03-01T16:34:34.953 | DEBUG | c.e.spec.SpockTestSupport | Commander server url: https://ps9.ecloud-kdemo.com:8443
2019-03-01T16:34:37.162 | DEBUG | c.e.spec.SpockTestSupport | login using admin
2019-03-01T16:34:37.985 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: resource 'ecadmin-lin', hostName: 'localhost' 
2019-03-01T16:34:38.780 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "resource": {
        "resourceId": "299bd696-3c36-11e9-85e2-0a03fa837144",
        "resourceName": "ecadmin-lin",
        "agentState": {
            "alive": "1",
            "details": "The agent is alive",
            "hostOS": "Linux edwardjones 4.4.0-1075-aws #85-Ubuntu SMP Thu Jan 17 17:15:12 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux",
            "hostPlatform": "linux",
            "message": "The agent is alive",
            "pingToken": "1551275940",
            "protocolVersion": "6",
            "state": "alive",
            "time": "2018-05-29T20:37:19.550Z",
            "version": "9.0.0.135442"
        },
        "createTime": "2019-03-01T15:24:53.525Z",
        "createTimeFormatted": "2019-03-01 15:24:53 UTC",
        "hostName": "localhost",
        "hostOS": "Linux edwardjones 4.4.0-1075-aws #85-Ubuntu SMP Thu Jan 17 17:15:12 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux",
        "hostPlatform": "linux",
        "hostType": "CONCURRENT",
        "lastJobId": "4400ed4a-3c37-11e9-a730-0a03fa837144",
        "lastJobName": "EC-Admin_Test::scriptsPropertiesTest::69831_2019-03-01 15:32:47",
        "lastJobStepId": "44061d4a-3c37-11e9-9c30-0a03fa837144",
        "lastModifiedBy": "project: EC-Admin_Test",
        "lastRunTime": "2019-03-01T15:32:47.400Z",
        "lastRunTimeFormatted": "2019-03-01 15:32:47 UTC",
        "modifyTime": "2019-03-01T15:32:47.400Z",
        "owner": "admin",
        "port": "",
        "propertySheetId": "299bd698-3c36-11e9-85e2-0a03fa837144",
        "proxyPort": "",
        "resourceAgentState": "alive",
        "resourceAgentVersion": "9.0.0.135442",
        "resourceDisabled": "0",
        "runningTime": "0h 9min",
        "stepLimit": "",
        "trusted": "0",
        "useSSL": "1",
        "zoneName": "default"
    }
}
2019-03-01T16:34:38.806 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: 
project 'EC-Admin_Test', {
  description = 'procedure testing'

  procedure 'artifactRepoSyncTesting', {
    description = 'Do not delete. Called by ec-spec-tools'

    formalParameter 'repoRes', defaultValue: 'win8', {
      description = 'The resource of the repo to test'
      required = '1'
      type = 'entry'
    }

    step 'delete', {
      command = '''$[/plugins[EC-Admin]project/scripts/perlHeaderJSON]

use File::Path;

my $dir=$ENV{\'COMMANDER_DATA\'};

if (! $dir) {
  printf("Error: COMMANDER_DATA undefined: $dir\\n");
  exit(1);
}
printf("Delete $dir/repository-data");
rmtree ("$dir/repository-data");
'''
      errorHandling = 'failProcedure'
      resourceName = '$[repoRes]'
      shell = 'ec-perl'
     }

    step 'sync', {
      errorHandling = 'failProcedure'
      subprocedure = 'artifactRepositorySynchronization'
      subproject = '/plugins/EC-Admin/project'
      actualParameter 'artifactRepositoryList', 'default'
      actualParameter 'artifactRepositoryResource', '$[repoRes]'
      actualParameter 'artifactVersionPattern', 'AA:*'
      actualParameter 'batchSize', '25'
    }

    step 'verify', {
      command = '''$[/plugins[EC-Admin]project/scripts/perlHeaderJSON]

use File::Path;

my $dir=$ENV{\'COMMANDER_DATA\'};

if (! $dir) {
  printf("Error: COMMANDER_DATA undefined: $dir\\n");
  exit(1);
}
if (! -d "$dir/repository-data/AA/OLHp/3.3.3") {
	printf("Error: cannot find AA/OLHp/3.3.3 in $dir/repository-data");
    exit(1);
}

if (! -d "$dir/repository-data/AA/OLHp/3.3.4") {
	printf("Error: cannot find AA/OLHp/3.3.4 in $dir/repository-data");
    exit(1);
}
'''
      errorHandling = 'failProcedure'
      resourceName = '$[repoRes]'
      shell = 'ec-perl'
     }
  }

  procedure 'cleanJob-LocalWorkspace', {
    step 'echo', {
      command = '''echo "Hellow world"'''
      resourceName = 'ecadmin-win'
      workspaceName = 'ecadmin-win-wks'
    }

    step 'build', {
      errorHandling = 'failProcedure'
       subprocedure = 'Build'
      subproject = 'Training_user'
      actualParameter 'Build Label', 'gfoo'
    }
  }

  procedure 'getPS', {
    description = '''to be called by ntest to verify getP and getPS work as expected
Issue #20'''

    step 'getPSJSON', {
       command = '''$[/plugins/EC-Admin/project/scripts/perlHeaderJSON]

my $hRef=getPS("/server/EC-Admin", 1);
print Dumper($hRef);

my $val=$hRef->{licenseLogger}->{config}->{emailTo};
$ec->setProperty("summary", $val);
exit ($val ne "$[/server/EC-Admin/licenseLogger/config/emailTo]");

$[/plugins/EC-Admin/project/scripts/perlLibJSON]
'''
      shell = 'ec-perl'
    }

    step 'getPSXML', {
      command = '''$[/plugins/EC-Admin/project/scripts/perlHeader]
use Data::Dumper;

my $hRef=getPS("/myProject/PS", 1);
print Dumper($hRef);

my $val=$hRef->{licenseLogger}->{config}->{emailTo};
$ec->setProperty("summary", $val);
exit ($val ne "$[/myProject/PS/licenseLogger/config/emailTo]");

$[/plugins/EC-Admin/project/scripts/perlLib]
'''
      shell = 'ec-perl'
     }
  }

  procedure 'questionMark', {

    step 'rerun?', {
      command = 'echo "I\'m rerunning"'
    }
  }

  procedure 'RP_Test2', {

    step 'step2_1', {
      subprocedure = 'RP_Proc1'
    }
  }

  procedure 'scriptsPropertiesTest', {
    description = '''Test the code in the scripts PS to be sure they can be loaded from a different project
Called by NTEST '''

    step 'humanSize', {
      description = 'Should return 3 Mb'
      command = '''$[/plugins/[EC-Admin]/project/scripts/perlHeaderJSON]
my $res=humanSize(3*1024*1024);

printf("size=%s\\n",$res);
$ec->setProperty("result", $res);

$[/plugins/[EC-Admin]/project/scripts/perlCommonLib]'''
      resourceName = 'ecadmin-lin'
      shell = 'ec-perl'
    }
  }

  procedure 'semaphoreTest', {
    jobNameTemplate = '$[/server/jobTemplate]'

    formalParameter 'token', defaultValue: '1', {
      required = '1'
      simpleList = '1|2|3'
      type = 'radio'
    }

    step 'acqToken', {
      subprocedure = 'acquireSemaphore'
      subproject = '/plugins/EC-Admin/project'
      actualParameter 'maxSemaphoreValue', '1'
      actualParameter 'semaphoreProperty', '/projects/EC-Admin_Test/token$[token]'
      actualParameter 'serializationResource', 'Serializer'
    }

    step 'sleep', {
      command = 'sleep 10'
    }

    step 'relToken', {
      subprocedure = 'releaseSemaphore'
      subproject = '/plugins/EC-Admin/project'
      actualParameter 'semaphoreProperty', '/projects/EC-Admin_Test/token$[token]'
      actualParameter 'serializationResource', 'Serializer'
    }

    // Custom properties

    property 'ec_customEditorData', {

      // Custom properties

      property 'parameters', {

        // Custom properties

        property 'token', {

          // Custom properties

          property 'options', {

            // Custom properties
            list = '1|2|3'

            property 'type', value: 'simpleList', {
              expandable = '1'
              suppressValueTracking = '0'
            }
          }
          formType = 'standard'
        }
      }
    }
  }

  procedure 'TestRemoveParameter', {

    step 'CreateProcedure', {
      command = '''$[/plugins/EC-Admin/project/scripts/perlHeaderJSON]

my $proj="$[/myProject/projectName]";

#
# Create callee
#
my($ok,$json)=InvokeCOmmander(\'getProcedure\', "RP_Proc1);
if (! $ok) {
  $ec->createProcedure($proj, "RP_Proc1");
  $ec->createFormalParameter($proj, "RP_Proc1", "param1", {description=>"Test param1"});
}

#
# Create Caller
#
$ec->createProcedure($proj, "RP_Test2");
$ec->createStep($proj, "RP_Test2", "step2_1",
			{
              actualParameter=>[{actualParameterName => \'param1\', value => \'main\'}],
              subprocedure=>"RP_Proc1"
            }
         );

$[/plugins/EC-Admin/project/scripts/perlLibJSON]
'''
      shell = 'ec-perl'
    }

    step 'callTest', {
      subprocedure = 'removeParameterFromCall'
      subproject = '/plugins/EC-Admin/project'
      actualParameter 'debug', 'true'
      actualParameter 'delete', 'true'
      actualParameter 'parameter_Name', 'param1'
      actualParameter 'procedure_Name', 'RP_Proc1'
      actualParameter 'project_Name', 'EC-Admin Test'
    }

    step 'Clean', {
      command = '''$[/plugins/EC-Admin/project/scripts/perlHeaderJSON]

my $proj="$[/myProject/projectName]";

$ec->deleteProcedure($proj, "RP_Proc1");
$ec->deleteProcedure($proj, "RP_Proc2");
'''
      shell = 'ec-perl'
    }
  }

  tag 'ec-admin'

  // Custom properties

  property 'PS', {
    description = ''

    // Custom properties

    property 'cleanup', {

      // Custom properties

      property 'config', {

        // Custom properties

        property 'timeout', value: '600', {
          description = ''
          expandable = '1'
          suppressValueTracking = '0'
        }
      }
    }

    property 'licenseLogger', {

      // Custom properties

      property 'config', {

        // Custom properties
        cleanpOldJobs = '1'

        property 'emailConfig', value: 'default', {
          expandable = '1'
          suppressValueTracking = '0'
        }
        emailTo = 'admin'

        property 'resource', value: 'local', {
          expandable = '1'
          suppressValueTracking = '0'
        }

        property 'workspace', value: 'default', {
          expandable = '1'
          suppressValueTracking = '0'
        }
      }
    }
  }
  token1 = '1'
  token2 = '-1'
  token3 = ''
}

2019-03-01T16:34:42.718 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "project": {
        "projectId": "a2d9eb9e-3c33-11e9-b2a8-0a03fa837144",
        "projectName": "EC-Admin_Test",
        "createTime": "2019-03-01T15:06:48.055Z",
        "description": "procedure testing",
        "lastModifiedBy": "admin",
        "modifyTime": "2019-03-01T15:06:48.055Z",
        "owner": "admin",
        "processCount": "0",
        "propertySheetId": "a2d9eba0-3c33-11e9-b2a8-0a03fa837144",
        "stageCount": "0",
        "tracked": "1"
    }
}
2019-03-01T16:34:42.743 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: promotePlugin(pluginName: "EC-Admin")
2019-03-01T16:34:43.376 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "plugin": {
        "pluginId": "6a43c592-b2f8-11e8-addf-0a03fa837144",
        "pluginName": "EC-Admin-3.1.6.709",
        "author": "L. Rochette",
        "createTime": "2018-09-07T23:47:43.667Z",
        "description": "A set of administrative tasks to help manage your server.",
        "label": "EC-Admin",
        "lastModifiedBy": "admin",
        "modifyTime": "2018-09-07T23:51:26.644Z",
        "owner": "admin",
        "pluginKey": "EC-Admin",
        "pluginVersion": "3.1.6.709",
        "pluginWizardBased": "1",
        "projectName": "EC-Admin-3.1.6.709",
        "promoted": "1",
        "propertySheetId": "6a43c594-b2f8-11e8-addf-0a03fa837144",
        "supportsConfigurations": "0"
    }
}
2019-03-01T16:34:43.377 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getProperty("/plugins/EC-Admin/pluginVersion")
2019-03-01T16:34:43.997 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyName": "pluginVersion",
        "createTime": "2018-09-07T23:47:43.667Z",
        "description": "'pluginVersion' is a built-in property on plugin 'EC-Admin-3.1.6.709'",
        "expandable": "1",
        "modifyTime": "2018-09-07T23:51:26.644Z",
        "pathRelativeToOwner": "pluginVersion",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "3.1.6.709"
    }
}
2019-03-01T16:34:43.998 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getProperty("/plugins/EC-Admin/project/ec_visibility")
2019-03-01T16:34:44.613 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyId": "6b385edc-b2f8-11e8-9035-0a03fa837144",
        "propertyName": "ec_visibility",
        "createTime": "2018-09-07T23:47:44.670Z",
        "expandable": "1",
        "lastModifiedBy": "admin",
        "modifyTime": "2018-09-07T23:47:44.670Z",
        "owner": "admin",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "pickListOnly"
    }
}
2019-03-01T16:34:44.634 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: 
      setProperty(
        propertyName: "/plugins/EC-Admin/project/ec_debug_logToProperty",
        value: "/myJob/debug_logs"
      )
    
2019-03-01T16:34:45.258 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyId": "82ed8a3b-3c26-11e9-989d-0a03fa837144",
        "propertyName": "ec_debug_logToProperty",
        "createTime": "2019-03-01T13:32:51.428Z",
        "expandable": "1",
        "lastModifiedBy": "admin",
        "modifyTime": "2019-03-01T13:32:51.428Z",
        "owner": "admin",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "/myJob/debug_logs"
    }
}
2019-03-01T16:34:45.259 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: runProcedure(projectName: "EC-Admin_Test", procedureName: "scriptsPropertiesTest") 
2019-03-01T16:34:45.901 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "jobId": "8a99e517-3c37-11e9-81aa-0a03fa837144"
}
2019-03-01T16:34:45.907 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: waitForCompletion jobId:'8a99e517-3c37-11e9-81aa-0a03fa837144'
2019-03-01T16:34:46.522 | DEBUG | c.e.spec.SpockTestSupport | Response {
    
}
2019-03-01T16:34:46.524 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getProperty(propertyName: '/myJob/debug_logs', jobId: '8a99e517-3c37-11e9-81aa-0a03fa837144')
2019-03-01T16:34:47.237 | DEBUG | c.e.spec.SpockTestSupport | Response {
    
}
2019-03-01T16:34:47.242 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getJobStatus jobId: '8a99e517-3c37-11e9-81aa-0a03fa837144'
2019-03-01T16:34:47.861 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "jobId": "8a99e517-3c37-11e9-81aa-0a03fa837144",
    "outcome": "success",
    "status": "completed"
}
2019-03-01T16:34:47.862 | DEBUG | c.e.spec.SpockTestSupport | DSL: runProcedure(projectName: "EC-Admin_Test", procedureName: "scriptsPropertiesTest") 
2019-03-01T16:34:47.862 | DEBUG | c.e.spec.SpockTestSupport | Logs: Possible exception in logs; check job
2019-03-01T16:34:47.862 | DEBUG | c.e.spec.SpockTestSupport | Outcome: success
2019-03-01T16:34:47.863 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getProperty(propertyName: '/myJob/jobSteps/humanSize/result', jobId: '8a99e517-3c37-11e9-81aa-0a03fa837144')
2019-03-01T16:34:48.477 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyId": "8ac90bee-3c37-11e9-8e37-0a03fa837144",
        "propertyName": "result",
        "createTime": "2019-03-01T15:34:46.076Z",
        "expandable": "1",
        "lastModifiedBy": "project: EC-Admin_Test",
        "modifyTime": "2019-03-01T15:34:46.076Z",
        "owner": "project: EC-Admin_Test",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "3.00 MB"
    }
}
2019-03-01T16:34:48.479 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getProperty(propertyName: '/myJob/jobSteps/humanSize/exitCode', jobId: '8a99e517-3c37-11e9-81aa-0a03fa837144')
2019-03-01T16:34:49.092 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyName": "exitCode",
        "createTime": "2019-03-01T15:34:45.796Z",
        "description": "'exitCode' is a built-in property on jobStep 'humanSize'",
        "expandable": "1",
        "modifyTime": "2019-03-01T15:34:46.123Z",
        "pathRelativeToOwner": "exitCode",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "0"
    }
}
2019-03-01T16:34:49.095 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: 
      setProperty(
        propertyName: "/plugins/EC-Admin/project/ec_debug_logToProperty",
        value: "/myJob/debug_logs"
      )
    
2019-03-01T16:34:49.796 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyId": "82ed8a3b-3c26-11e9-989d-0a03fa837144",
        "propertyName": "ec_debug_logToProperty",
        "createTime": "2019-03-01T13:32:51.428Z",
        "expandable": "1",
        "lastModifiedBy": "admin",
        "modifyTime": "2019-03-01T13:32:51.428Z",
        "owner": "admin",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "/myJob/debug_logs"
    }
}
2019-03-01T16:34:49.797 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: runProcedure(projectName: "EC-Admin_Test", procedureName: "getPS") 
2019-03-01T16:34:50.447 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "jobId": "8d4fdd4c-3c37-11e9-a730-0a03fa837144"
}
2019-03-01T16:34:50.448 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: waitForCompletion jobId:'8d4fdd4c-3c37-11e9-a730-0a03fa837144'
2019-03-01T16:34:51.252 | DEBUG | c.e.spec.SpockTestSupport | Response {
    
}
2019-03-01T16:34:51.253 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getProperty(propertyName: '/myJob/debug_logs', jobId: '8d4fdd4c-3c37-11e9-a730-0a03fa837144')
2019-03-01T16:34:51.870 | DEBUG | c.e.spec.SpockTestSupport | Response {
    
}
2019-03-01T16:34:51.871 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getJobStatus jobId: '8d4fdd4c-3c37-11e9-a730-0a03fa837144'
2019-03-01T16:34:52.483 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "jobId": "8d4fdd4c-3c37-11e9-a730-0a03fa837144",
    "outcome": "success",
    "status": "completed"
}
2019-03-01T16:34:52.484 | DEBUG | c.e.spec.SpockTestSupport | DSL: runProcedure(projectName: "EC-Admin_Test", procedureName: "getPS") 
2019-03-01T16:34:52.484 | DEBUG | c.e.spec.SpockTestSupport | Logs: Possible exception in logs; check job
2019-03-01T16:34:52.484 | DEBUG | c.e.spec.SpockTestSupport | Outcome: success
2019-03-01T16:34:52.484 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getProperty(propertyName: '/myJob/jobSteps/getPSJSON/exitCode', jobId: '8d4fdd4c-3c37-11e9-a730-0a03fa837144')
2019-03-01T16:34:53.169 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyName": "exitCode",
        "createTime": "2019-03-01T15:34:50.343Z",
        "description": "'exitCode' is a built-in property on jobStep 'getPSJSON'",
        "expandable": "1",
        "modifyTime": "2019-03-01T15:34:50.737Z",
        "pathRelativeToOwner": "exitCode",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "0"
    }
}
2019-03-01T16:34:53.170 | DEBUG | c.e.spec.SpockTestSupport | Evaluating dsl: getProperty(propertyName: '/myJob/jobSteps/getPSXML/exitCode', jobId: '8d4fdd4c-3c37-11e9-a730-0a03fa837144')
2019-03-01T16:34:53.786 | DEBUG | c.e.spec.SpockTestSupport | Response {
    "property": {
        "propertyName": "exitCode",
        "createTime": "2019-03-01T15:34:50.343Z",
        "description": "'exitCode' is a built-in property on jobStep 'getPSXML'",
        "expandable": "1",
        "modifyTime": "2019-03-01T15:34:51.100Z",
        "pathRelativeToOwner": "exitCode",
        "suppressValueTracking": "0",
        "tracked": "0",
        "value": "0"
    }
}
2019-03-01T16:34:54.673 | DEBUG | c.e.spec.SpockTestSupport | Commander server url: https://ps9.ecloud-kdemo.com:8443
2019-03-01T16:34:55.707 | DEBUG | c.e.spec.SpockTestSupport | login using admin
