# -*-Perl-*-

# changeBannerColor.ntest -
#
# check the licenseLogger procedures of EC-Admin plugin
#
# Copyright (c) 2014 Electric Cloud, Inc.
# All rights reserved

use strict;
use warnings;
use ECTest;

initCommander();
$::N=$adminSession;

my $pluginKey = "EC-Admin";
my $xpath = $::N->getPlugin($pluginKey);
my $pluginName = $xpath->findvalue("//pluginName")->value;

#-------------------------------------------------------------------------------
# Test procedure present.
#-------------------------------------------------------------------------------
ntest "licenseLogger", {}, sub {
	assertOK($::N->getProcedure($pluginName, "licenseLogger-snapshot"), "procedure licenseLogger-snapshot missing");
	assertOK($::N->getProcedure($pluginName, "licenseLogger-report"), "procedure licenseLogger-report missing");
};

#-------------------------------------------------------------------------------
# Issue 51 check /server/counters/EC-Admin is writable upon promotion
#-------------------------------------------------------------------------------
ntest "Issue_52 EC-Admin counter is writable" , {}, sub {
  my $ps=$::N->getProperty("/server/counters/EC-Admin");
  my $psId=$ps->findvalue("//propertySheetId");

  my $xpath=$::N->getAclEntry("group", "Everyone", {propertySheetId => $psId});
  assertOK($xpath, "Cannot get ACL for /server/counters/EC-Admin");

  assertEq("allow", $xpath->findvalue("//aclEntry/readPrivilege"), "PS does not have read privilege"); 
  assertEq("allow", $xpath->findvalue("//aclEntry/modifyPrivilege"), "PS does not have write privilege"); 
};

#-------------------------------------------------------------------------------
# Check the report is send properly
#-------------------------------------------------------------------------------
#ntest "Report", {}, sub {
#
	# create a fake data point (before it was released so 2012-01)
	#my $month="201201";
	#my $xpath=$::N->createProperty("/server/$pluginKey/licenseLogger/$month", 
							#{valueFile=>"licenseLogger$month.txt",
							 #description=>"identity,dataVersion,timeStamp,inUseHosts,inUseLicenses,inUseProxiedHosts,runningSteps"});
#
	# Send email
	#smtpServerUp("licenseLogger");
	
	# clean
	#$xpath=$::N->deleteProperty("/server/$pluginKey/licenseLogger/$month");
	#assertOK($xpath, "CO
		#Could not delete fake data for testing - /server/$pluginKey/licenseLogger/$month");
#
#};

1;
